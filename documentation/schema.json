{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://www.github.com/dotnet/dotnet-monitor",
  "title": "DotnetMonitorConfiguration",
  "type": "object",
  "additionalProperties": {},
  "properties": {
    "Logging": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/LoggingOptions"
        }
      ]
    },
    "Authentication": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/AuthenticationOptions"
        }
      ]
    },
    "CollectionRules": {
      "type": [
        "null",
        "object"
      ],
      "default": {},
      "additionalProperties": {
        "$ref": "#/definitions/CollectionRuleOptions"
      }
    },
    "GlobalCounter": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/GlobalCounterOptions"
        }
      ]
    },
    "CorsConfiguration": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/CorsConfigurationOptions"
        }
      ]
    },
    "DiagnosticPort": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/DiagnosticPortOptions"
        },
        {
          "type": "string"
        }
      ]
    },
    "Egress": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/EgressOptions"
        }
      ]
    },
    "Metrics": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/MetricsOptions"
        }
      ]
    },
    "Storage": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/StorageOptions"
        }
      ]
    },
    "DefaultProcess": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/ProcessFilterOptions"
        }
      ]
    },
    "CollectionRuleDefaults": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/CollectionRuleDefaultsOptions"
        }
      ]
    },
    "Templates": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/TemplateOptions"
        }
      ]
    }
  },
  "definitions": {
    "LoggingOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "LogLevel": {
          "type": [
            "null",
            "object"
          ],
          "description": "A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies to no specific provider.",
          "default": {},
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/LogLevel"
              }
            ]
          }
        },
        "Console": {
          "description": "Logging options for the Console provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/ConsoleLoggerOptions"
            }
          ]
        },
        "EventLog": {
          "description": "Logging options for the EventLog provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogLevelOptions"
            }
          ]
        },
        "Debug": {
          "description": "Logging options for the Debug provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogLevelOptions"
            }
          ]
        },
        "EventSource": {
          "description": "Logging options for the EventSource provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogLevelOptions"
            }
          ]
        },
        "CaptureScopes": {
          "type": "boolean",
          "description": "Gets or sets whether logging scopes are being captured. Defaults to true.",
          "default": true
        }
      }
    },
    "LogLevel": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ],
      "enum": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ]
    },
    "ConsoleLoggerOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "FormatterName": {
          "description": "Name of the log message formatter to use. Defaults to 'Simple'.",
          "default": "Simple",
          "oneOf": [
            {
              "$ref": "#/definitions/ConsoleLoggerFormat"
            }
          ]
        },
        "LogToStandardErrorThreshold": {
          "description": "The minimum level of messages that are written to Console.Error.",
          "oneOf": [
            {
              "$ref": "#/definitions/LogLevel"
            }
          ]
        },
        "FormatterOptions": {
          "description": "Formatter options for the built-in console log formatter.",
          "default": {},
          "oneOf": [
            {},
            {
              "type": "null"
            }
          ]
        },
        "LogLevel": {
          "type": [
            "null",
            "object"
          ],
          "description": "A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies solely to ConsoleLoggerOptions.",
          "default": {},
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/LogLevel"
              }
            ]
          }
        }
      },
      "oneOf": [
        {
          "required": [
            "FormatterName"
          ],
          "properties": {
            "FormatterName": {
              "const": "Json"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/JsonConsoleFormatterOptions"
            }
          }
        },
        {
          "required": [
            "FormatterName"
          ],
          "properties": {
            "FormatterName": {
              "const": "Simple"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/SimpleConsoleFormatterOptions"
            }
          }
        },
        {
          "required": [
            "FormatterName"
          ],
          "properties": {
            "FormatterName": {
              "const": "Systemd"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/ConsoleFormatterOptions"
            }
          }
        },
        {
          "properties": {
            "FormatterName": {
              "type": "null",
              "default": "Simple"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/SimpleConsoleFormatterOptions"
            }
          }
        }
      ]
    },
    "ConsoleLoggerFormat": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Json",
        "Simple",
        "Systemd"
      ],
      "enum": [
        "Json",
        "Simple",
        "Systemd"
      ]
    },
    "LogLevelOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "LogLevel": {
          "type": [
            "null",
            "object"
          ],
          "description": "A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies to the specified provider.",
          "default": {},
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/LogLevel"
              }
            ]
          }
        }
      }
    },
    "AuthenticationOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "MonitorApiKey"
      ],
      "properties": {
        "MonitorApiKey": {
          "description": "The parameters used to validate MonitorApiKey JWT tokens.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitorApiKeyOptions"
            }
          ]
        }
      }
    },
    "MonitorApiKeyOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Subject",
        "PublicKey"
      ],
      "properties": {
        "Subject": {
          "type": "string",
          "description": "The value of the 'sub' or Subject field in the JWT (JSON Web Token).",
          "minLength": 1
        },
        "PublicKey": {
          "type": "string",
          "description": "The public key used to sign the JWT (JSON Web Token) used for authentication. This field is a JSON Web Key serialized as JSON encoded with base64Url encoding. The JWK must have a kty field of RSA or EC and should not have the private key information.",
          "minLength": 1,
          "pattern": "[0-9a-zA-Z_-]+"
        }
      }
    },
    "CollectionRuleOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Trigger"
      ],
      "properties": {
        "Filters": {
          "type": [
            "array",
            "null"
          ],
          "description": "Process filters used to determine to which process(es) the collection rule is applied. All filters must match. If no filters are specified, the rule is applied to all discovered processes.",
          "items": {
            "$ref": "#/definitions/ProcessFilterDescriptor"
          }
        },
        "Trigger": {
          "description": "The trigger to use to monitor for a condition in the target process.",
          "oneOf": [
            {
              "$ref": "#/definitions/CollectionRuleTriggerOptions"
            }
          ]
        },
        "Actions": {
          "type": [
            "array",
            "null"
          ],
          "description": "The list of actions to be executed when the trigger raises its notification.",
          "items": {
            "$ref": "#/definitions/CollectionRuleActionOptions"
          }
        },
        "Limits": {
          "description": "The set of limits to constrain the execution of the rule and its components.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/CollectionRuleLimitsOptions"
            }
          ]
        }
      }
    },
    "ProcessFilterDescriptor": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "description": "The criteria used to compare against the target process.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProcessFilterKey"
            }
          ]
        },
        "Value": {
          "type": [
            "null",
            "string"
          ],
          "description": "The value of the criteria used to compare against the target process."
        },
        "MatchType": {
          "description": "Type of match to use against the process criteria.",
          "default": "Exact",
          "oneOf": [
            {
              "$ref": "#/definitions/ProcessFilterType"
            }
          ]
        },
        "ProcessName": {
          "type": [
            "null",
            "string"
          ],
          "description": "Performs a match based on the name of a process on the system."
        },
        "ProcessId": {
          "type": [
            "null",
            "string"
          ],
          "description": "Performs a match based on the numerical ID of a process on the system."
        },
        "CommandLine": {
          "type": [
            "null",
            "string"
          ],
          "description": "Performs a match based on the contents of the command passed to launch the process on the system; this typically includes the executable path and arguments to the process."
        }
      }
    },
    "ProcessFilterKey": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ProcessId",
        "ProcessName",
        "CommandLine"
      ],
      "enum": [
        "ProcessId",
        "ProcessName",
        "CommandLine"
      ]
    },
    "ProcessFilterType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Exact",
        "Contains"
      ],
      "enum": [
        "Exact",
        "Contains"
      ]
    },
    "CollectionRuleTriggerOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Type"
      ],
      "properties": {
        "Type": {
          "type": "string",
          "description": "The type of trigger used to monitor for a condition in the target process.",
          "minLength": 1,
          "oneOf": [
            {
              "$ref": "#/definitions/CollectionRuleTriggerType"
            }
          ]
        },
        "Settings": {
          "description": "The settings to pass to the trigger when it is executed. Settings may be optional if the trigger doesn't require settings or its settings are all optional.",
          "oneOf": [
            {},
            {
              "type": "null"
            }
          ]
        }
      },
      "oneOf": [
        {
          "properties": {
            "Type": {
              "const": "AspNetRequestCount"
            },
            "Settings": {
              "$ref": "#/definitions/AspNetRequestCountOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "AspNetRequestDuration"
            },
            "Settings": {
              "$ref": "#/definitions/AspNetRequestDurationOptions"
            }
          }
        },
        {
          "required": [
            "Settings"
          ],
          "properties": {
            "Type": {
              "const": "AspNetResponseStatus"
            },
            "Settings": {
              "$ref": "#/definitions/AspNetResponseStatusOptions"
            }
          }
        },
        {
          "required": [
            "Settings"
          ],
          "properties": {
            "Type": {
              "const": "EventCounter"
            },
            "Settings": {
              "$ref": "#/definitions/EventCounterOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "CPUUsage"
            },
            "Settings": {
              "$ref": "#/definitions/CPUUsageOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "GCHeapSize"
            },
            "Settings": {
              "$ref": "#/definitions/GCHeapSizeOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "ThreadpoolQueueLength"
            },
            "Settings": {
              "$ref": "#/definitions/ThreadpoolQueueLengthOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "Startup"
            },
            "Settings": {
              "type": "null"
            }
          }
        }
      ]
    },
    "CollectionRuleActionOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Type"
      ],
      "properties": {
        "Name": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name used to refer to the action."
        },
        "Type": {
          "type": "string",
          "description": "The type of action to execute.",
          "minLength": 1,
          "oneOf": [
            {
              "$ref": "#/definitions/CollectionRuleActionType"
            }
          ]
        },
        "Settings": {
          "description": "The settings to pass to the action when it is executed. Settings may be optional if the action doesn't require settings or its settings are all optional.",
          "oneOf": [
            {},
            {
              "type": "null"
            }
          ]
        },
        "WaitForCompletion": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Wait for the current action to complete before starting the next action.",
          "default": false
        }
      },
      "oneOf": [
        {
          "properties": {
            "Type": {
              "const": "CollectDump"
            },
            "Settings": {
              "$ref": "#/definitions/CollectDumpOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "CollectGCDump"
            },
            "Settings": {
              "$ref": "#/definitions/CollectGCDumpOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "CollectLiveMetrics"
            },
            "Settings": {
              "$ref": "#/definitions/CollectLiveMetricsOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "CollectLogs"
            },
            "Settings": {
              "$ref": "#/definitions/CollectLogsOptions"
            }
          }
        },
        {
          "properties": {
            "Type": {
              "const": "CollectTrace"
            },
            "Settings": {
              "$ref": "#/definitions/CollectTraceOptions"
            }
          }
        },
        {
          "required": [
            "Settings"
          ],
          "properties": {
            "Type": {
              "const": "Execute"
            },
            "Settings": {
              "$ref": "#/definitions/ExecuteOptions"
            }
          }
        },
        {
          "required": [
            "Settings"
          ],
          "properties": {
            "Type": {
              "const": "LoadProfiler"
            },
            "Settings": {
              "$ref": "#/definitions/LoadProfilerOptions"
            }
          }
        },
        {
          "required": [
            "Settings"
          ],
          "properties": {
            "Type": {
              "const": "SetEnvironmentVariable"
            },
            "Settings": {
              "$ref": "#/definitions/SetEnvironmentVariableOptions"
            }
          }
        },
        {
          "required": [
            "Settings"
          ],
          "properties": {
            "Type": {
              "const": "GetEnvironmentVariable"
            },
            "Settings": {
              "$ref": "#/definitions/GetEnvironmentVariableOptions"
            }
          }
        }
      ]
    },
    "CollectionRuleLimitsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ActionCount": {
          "type": [
            "integer",
            "null"
          ],
          "description": "The number of times the action list may be executed before being throttled.",
          "format": "int32",
          "default": 5,
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "ActionCountSlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding window of time to consider whether the action list should be throttled based on the number of times the action list was executed. Executions that fall outside the window will not count toward the limit specified in the ActionCount setting.",
          "format": "time-span"
        },
        "RuleDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The amount of time before the rule will stop monitoring a process after it has been applied to a process. If not specified, the rule will monitor the process with the trigger indefinitely.",
          "format": "time-span"
        }
      }
    },
    "GlobalCounterOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalSeconds": {
          "type": [
            "null",
            "number"
          ],
          "description": "Determines the metrics interval for all dotnet-monitor scenarios. This includes prometheus metrics, live metrics, triggers, and traces.",
          "format": "float",
          "default": 5.0,
          "maximum": 86400.0,
          "minimum": 1.0
        }
      }
    },
    "CorsConfigurationOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "AllowedOrigins"
      ],
      "properties": {
        "AllowedOrigins": {
          "type": "string",
          "description": "List of allowed CORS origins, separated by semicolons.",
          "minLength": 1
        }
      }
    },
    "DiagnosticPortOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ConnectionMode": {
          "description": "In 'Connect' mode, dotnet-monitor connects to the application for diagnostics. In 'Listen' mode, the application connects to dotnet-monitor via EndpointName.",
          "default": "Connect",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/DiagnosticPortConnectionMode"
            }
          ]
        },
        "EndpointName": {
          "type": [
            "null",
            "string"
          ],
          "description": "In 'Listen' mode, specifies the name of the named pipe or unix domain socket to use for connecting to the diagnostic server."
        },
        "MaxConnections": {
          "type": [
            "integer",
            "null"
          ],
          "description": "In 'Listen' mode, the maximum amount of connections to accept.",
          "format": "int32"
        },
        "DeleteEndpointOnStartup": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "In 'Listen' connection mode, deletes the domain socket file used for diagnostic port communication.",
          "default": false
        }
      }
    },
    "DiagnosticPortConnectionMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Connect",
        "Listen"
      ],
      "enum": [
        "Connect",
        "Listen"
      ]
    },
    "EgressOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AzureBlobStorage": {
          "type": [
            "null",
            "object"
          ],
          "description": "Mapping of Azure blob storage egress provider names to their options.",
          "default": {},
          "additionalProperties": {
            "$ref": "#/definitions/AzureBlobEgressProviderOptions"
          }
        },
        "FileSystem": {
          "type": [
            "null",
            "object"
          ],
          "description": "Mapping of file system egress provider names to their options.",
          "default": {},
          "additionalProperties": {
            "$ref": "#/definitions/FileSystemEgressProviderOptions"
          }
        },
        "Properties": {
          "type": [
            "null",
            "object"
          ],
          "description": "Additional properties, such as secrets, that can be referenced by the provider definitions.",
          "default": {},
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AzureBlobEgressProviderOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "AccountUri",
        "ContainerName"
      ],
      "properties": {
        "AccountUri": {
          "type": "string",
          "description": "The URI of the Azure blob storage account.",
          "format": "uri",
          "minLength": 1
        },
        "AccountKey": {
          "type": [
            "null",
            "string"
          ],
          "description": "The account key used to access the Azure blob storage account."
        },
        "AccountKeyName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the account key used to look up the value from the Egress options Properties map."
        },
        "SharedAccessSignature": {
          "type": [
            "null",
            "string"
          ],
          "description": "The shared access signature (SAS) used to access the Azure blob and optionally queue storage accounts."
        },
        "SharedAccessSignatureName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the shared access signature (SAS) used to look up the value from the Egress options Properties map."
        },
        "ManagedIdentityClientId": {
          "type": [
            "null",
            "string"
          ],
          "description": "Client id of the Managed Identity used for authentication. The identity must have permissions to create containers and write to blob storage."
        },
        "ContainerName": {
          "type": "string",
          "description": "The name of the container to which the blob will be egressed. If egressing to the root container, use the \"$root\" sentinel value.",
          "minLength": 1
        },
        "BlobPrefix": {
          "type": [
            "null",
            "string"
          ],
          "description": "The prefix to prepend to the blob name."
        },
        "CopyBufferSize": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Buffer size used when copying data from an egress callback returning a stream to the egress callback that is provided a stream to which data is written.",
          "format": "int32"
        },
        "QueueName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the queue to which a message will be dispatched upon writing to a blob."
        },
        "QueueAccountUri": {
          "type": [
            "null",
            "string"
          ],
          "description": "The URI of the Azure queue storage account.",
          "format": "uri"
        },
        "QueueSharedAccessSignature": {
          "type": [
            "null",
            "string"
          ],
          "description": "The shared access signature (SAS) used to access the Azure queue storage account."
        },
        "QueueSharedAccessSignatureName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the queue shared access signature (SAS) used to look up the value from the Egress options Properties map."
        },
        "Metadata": {
          "type": [
            "null",
            "object"
          ],
          "description": "A mapping of metadata keys to environment variable names. The values of the environment variables will be added as metadata for egressed artifacts.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FileSystemEgressProviderOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "DirectoryPath"
      ],
      "properties": {
        "DirectoryPath": {
          "type": "string",
          "description": "The directory path to which the stream data will be egressed.",
          "minLength": 1
        },
        "IntermediateDirectoryPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "The directory path to which the stream data will initially be written, if specified; the file will then be moved/renamed to the directory specified in DirectoryPath."
        },
        "CopyBufferSize": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Buffer size used when copying data from an egress callback returning a stream to the egress callback that is provided a stream to which data is written.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        }
      }
    },
    "MetricsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Enable or disable metrics collection.",
          "default": true
        },
        "Endpoints": {
          "type": [
            "null",
            "string"
          ],
          "description": "Endpoints that expose prometheus metrics. Defaults to http://localhost:52325."
        },
        "MetricCount": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Amount of data points to store per metric.",
          "format": "int32",
          "default": 3,
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "IncludeDefaultProviders": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Include default providers: System.Runtime, Microsoft.AspNetCore.Hosting, and Grpc.AspNetCore.Server.",
          "default": true
        },
        "Providers": {
          "type": [
            "array",
            "null"
          ],
          "description": "Providers for custom metrics.",
          "items": {
            "$ref": "#/definitions/MetricProvider"
          }
        }
      }
    },
    "MetricProvider": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ProviderName"
      ],
      "properties": {
        "ProviderName": {
          "type": "string",
          "description": "The name of the custom metrics provider.",
          "minLength": 1
        },
        "CounterNames": {
          "type": [
            "array",
            "null"
          ],
          "description": "Name of custom metrics counters.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DumpTempFolder": {
          "type": [
            "null",
            "string"
          ],
          "description": "The location for temporary dump files. Defaults to the temp folder."
        }
      }
    },
    "ProcessFilterOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Filters": {
          "type": [
            "array",
            "null"
          ],
          "description": "Process filters used to determine which process to use if one is not explicitly specified. All filters must match.",
          "items": {
            "$ref": "#/definitions/ProcessFilterDescriptor"
          }
        }
      }
    },
    "CollectionRuleDefaultsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Triggers": {
          "description": "The Collection Rule Defaults that can be applied to triggers.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/CollectionRuleTriggerDefaultsOptions"
            }
          ]
        },
        "Actions": {
          "description": "The Collection Rule Defaults that can be applied to actions.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/CollectionRuleActionDefaultsOptions"
            }
          ]
        },
        "Limits": {
          "description": "The Collection Rule Defaults that can be applied to limits.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/CollectionRuleLimitsDefaultsOptions"
            }
          ]
        }
      }
    },
    "CollectionRuleTriggerDefaultsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RequestCount": {
          "type": [
            "integer",
            "null"
          ],
          "description": "The default threshold of the number of requests that start within the sliding window of time.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "ResponseCount": {
          "type": [
            "integer",
            "null"
          ],
          "description": "The default threshold number of responses with matching status codes.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The default sliding window duration.",
          "format": "time-span"
        }
      }
    },
    "CollectionRuleActionDefaultsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Egress": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the default Egress Provider."
        }
      }
    },
    "CollectionRuleLimitsDefaultsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ActionCount": {
          "type": [
            "integer",
            "null"
          ],
          "description": "The default number of times the action list may be executed before being throttled.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "ActionCountSlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The default sliding window of time to consider whether the action list should be throttled based on the number of times the action list was executed.",
          "format": "time-span"
        },
        "RuleDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The default amount of time before the rule will stop monitoring a process after it has been applied to a process.",
          "format": "time-span"
        }
      }
    },
    "TemplateOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CollectionRuleFilters": {
          "type": [
            "null",
            "object"
          ],
          "description": "Process filters used to determine to which process(es) the collection rule is applied. All filters must match. If no filters are specified, the rule is applied to all discovered processes.",
          "additionalProperties": {
            "$ref": "#/definitions/ProcessFilterDescriptor"
          }
        },
        "CollectionRuleTriggers": {
          "type": [
            "null",
            "object"
          ],
          "description": "The trigger to use to monitor for a condition in the target process.",
          "additionalProperties": {
            "$ref": "#/definitions/CollectionRuleTriggerOptions"
          }
        },
        "CollectionRuleActions": {
          "type": [
            "null",
            "object"
          ],
          "description": "The list of actions to be executed when the trigger raises its notification.",
          "additionalProperties": {
            "$ref": "#/definitions/CollectionRuleActionOptions"
          }
        },
        "CollectionRuleLimits": {
          "type": [
            "null",
            "object"
          ],
          "description": "The set of limits to constrain the execution of the rule and its components.",
          "additionalProperties": {
            "$ref": "#/definitions/CollectionRuleLimitsOptions"
          }
        }
      }
    },
    "CollectionRuleActionType": {
      "type": "string",
      "enum": [
        "CollectDump",
        "CollectGCDump",
        "CollectLiveMetrics",
        "CollectLogs",
        "CollectTrace",
        "Execute",
        "LoadProfiler",
        "SetEnvironmentVariable",
        "GetEnvironmentVariable"
      ]
    },
    "CollectDumpOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "description": "The type of dump to collect from the target process.",
          "default": "WithHeap",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/DumpType"
            }
          ]
        },
        "Egress": {
          "type": "string",
          "description": "The name of the egress provider to which the dump is egressed.",
          "minLength": 1
        }
      }
    },
    "DumpType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Full",
        "Mini",
        "WithHeap",
        "Triage"
      ],
      "enum": [
        "Full",
        "Mini",
        "WithHeap",
        "Triage"
      ]
    },
    "CollectGCDumpOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Egress": {
          "type": "string",
          "description": "The name of the egress provider to which the GC dump is egressed.",
          "minLength": 1
        }
      }
    },
    "CollectLiveMetricsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IncludeDefaultProviders": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Determines if the default counter providers should be used.",
          "default": true
        },
        "Providers": {
          "type": [
            "array",
            "null"
          ],
          "description": "The array of providers for metrics to collect.",
          "items": {
            "$ref": "#/definitions/EventMetricsProvider"
          }
        },
        "Duration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The duration of time in which live metrics are collected.",
          "format": "time-span",
          "default": "00:00:30"
        },
        "Egress": {
          "type": "string",
          "description": "The name of the egress provider to which the live metrics are egressed.",
          "minLength": 1
        }
      }
    },
    "EventMetricsProvider": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ProviderName"
      ],
      "properties": {
        "ProviderName": {
          "type": "string",
          "minLength": 1
        },
        "CounterNames": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CollectLogsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefaultLevel": {
          "description": "The default log level at which logs are collected for entries in the FilterSpecs that do not have a specified LogLevel value.",
          "default": "Warning",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogLevel"
            }
          ]
        },
        "FilterSpecs": {
          "type": [
            "null",
            "object"
          ],
          "description": "A custom mapping of logger categories to log levels that describes at what level a log statement that matches one of the given categories should be captured.",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/LogLevel"
              }
            ]
          }
        },
        "UseAppFilters": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Specifies whether to capture log statements at the levels as specified in the application-defined filters.",
          "default": true
        },
        "Duration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The duration of time in which logs are collected.",
          "format": "time-span",
          "default": "00:00:30"
        },
        "Egress": {
          "type": "string",
          "description": "The name of the egress provider to which the logs are egressed.",
          "minLength": 1
        },
        "Format": {
          "description": "The format of the logs artifact.",
          "default": "PlainText",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogFormat"
            }
          ]
        }
      }
    },
    "LogFormat": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NewlineDelimitedJson",
        "PlainText",
        "JsonSequence"
      ],
      "enum": [
        "NewlineDelimitedJson",
        "PlainText",
        "JsonSequence"
      ]
    },
    "CollectTraceOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Profile": {
          "description": "Use a predefined set of event providers and settings to capture in the trace. More than one profile may be specified at the same time. Either Profile or Providers must be specified, but not both.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/TraceProfile"
            }
          ]
        },
        "Providers": {
          "type": [
            "array",
            "null"
          ],
          "description": "A list of event providers and settings to capture in the trace.  Either Profile or Providers must be specified, but not both.",
          "items": {
            "$ref": "#/definitions/EventPipeProvider"
          }
        },
        "RequestRundown": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Indicates that rundown information should be included in the trace.",
          "default": true
        },
        "BufferSizeMegabytes": {
          "type": [
            "integer",
            "null"
          ],
          "description": "The size of the event pipe buffer to use in the target process. If the event pipe buffer fills with too many events, newer events will be dropped until the buffer is drained to fit new events.",
          "format": "int32",
          "default": 256,
          "maximum": 1024.0,
          "minimum": 1.0
        },
        "Duration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The duration of time in which trace events are collected.",
          "format": "time-span",
          "default": "00:00:30"
        },
        "Egress": {
          "type": "string",
          "description": "The name of the egress provider to which the trace is egressed.",
          "minLength": 1
        }
      }
    },
    "TraceProfile": {
      "type": "string",
      "description": "",
      "x-enumFlags": true,
      "x-enumNames": [
        "Cpu",
        "Http",
        "Logs",
        "Metrics"
      ],
      "enum": [
        "Cpu",
        "Http",
        "Logs",
        "Metrics"
      ]
    },
    "EventPipeProvider": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Name"
      ],
      "properties": {
        "Name": {
          "type": "string",
          "minLength": 1
        },
        "Keywords": {
          "type": [
            "null",
            "string"
          ]
        },
        "EventLevel": {
          "$ref": "#/definitions/EventLevel"
        },
        "Arguments": {
          "type": [
            "null",
            "object"
          ],
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EventLevel": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "LogAlways",
        "Critical",
        "Error",
        "Warning",
        "Informational",
        "Verbose"
      ],
      "enum": [
        "LogAlways",
        "Critical",
        "Error",
        "Warning",
        "Informational",
        "Verbose"
      ]
    },
    "ExecuteOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Path"
      ],
      "properties": {
        "Path": {
          "type": "string",
          "description": "The path of the executable to start.",
          "minLength": 1
        },
        "Arguments": {
          "type": [
            "null",
            "string"
          ],
          "description": "The arguments to pass to the executable."
        },
        "IgnoreExitCode": {
          "type": [
            "boolean",
            "null"
          ],
          "default": false
        }
      }
    },
    "LoadProfilerOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Path",
        "Clsid"
      ],
      "properties": {
        "Path": {
          "type": "string",
          "description": "The path of the profiler library to be loaded. This is typically the same value that would be set as the CORECLR_PROFILER_PATH environment variable.",
          "minLength": 1
        },
        "Clsid": {
          "type": "string",
          "description": "The class identifier (or CLSID, typically a GUID) of the ICorProfilerCallback implementation. This is typically the same value that would be set as the CORECLR_PROFILER environment variable.",
          "format": "guid",
          "minLength": 1
        }
      }
    },
    "SetEnvironmentVariableOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Name"
      ],
      "properties": {
        "Name": {
          "type": "string",
          "description": "The name of the environment variable to set.",
          "minLength": 1
        },
        "Value": {
          "type": [
            "null",
            "string"
          ],
          "description": "The value of the environment variable to set."
        }
      }
    },
    "GetEnvironmentVariableOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Name"
      ],
      "properties": {
        "Name": {
          "type": "string",
          "description": "The name of the environment variable to get.",
          "minLength": 1
        }
      }
    },
    "CollectionRuleTriggerType": {
      "type": "string",
      "enum": [
        "AspNetRequestCount",
        "AspNetRequestDuration",
        "AspNetResponseStatus",
        "EventCounter",
        "CPUUsage",
        "GCHeapSize",
        "ThreadpoolQueueLength",
        "Startup"
      ]
    },
    "AspNetRequestCountOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RequestCount": {
          "type": "integer",
          "description": "The threshold of the number of requests that start within the sliding window of time.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding time window in which the number of requests are counted.",
          "format": "time-span"
        },
        "IncludePaths": {
          "type": [
            "array",
            "null"
          ],
          "description": "The list of request paths to monitor. If not specified, all request paths are monitored.  A request path must exactly match one of the items in the list to be monitored. Request paths matching the ExcludePaths list will not be monitored.",
          "items": {
            "type": "string"
          }
        },
        "ExcludePaths": {
          "type": [
            "array",
            "null"
          ],
          "description": "The list of request paths to ignore. A request path must exactly match one of the items in the list to be ignored.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AspNetRequestDurationOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RequestCount": {
          "type": "integer",
          "description": "The threshold of the number of slow requests that start within the sliding window of time.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "RequestDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The threshold of the amount of time in which a request is considered to be slow.",
          "format": "time-span",
          "default": "00:00:05"
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding time window in which the the number of slow requests are counted.",
          "format": "time-span"
        },
        "IncludePaths": {
          "type": [
            "array",
            "null"
          ],
          "description": "The list of request paths to monitor. If not specified, all request paths are monitored. A request path must exactly match one of the items in the list to be monitored. Request paths matching the ExcludePaths list will not be monitored.",
          "items": {
            "type": "string"
          }
        },
        "ExcludePaths": {
          "type": [
            "array",
            "null"
          ],
          "description": "The list of request paths to ignore. A request path must exactly match one of the items in the list to be ignored.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AspNetResponseStatusOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "StatusCodes"
      ],
      "properties": {
        "StatusCodes": {
          "type": "array",
          "description": "The list of HTTP response status codes to monitor. Each item of the list can be a single code or a range of codes (e.g. \"400-499\").",
          "pattern": "[1-5][0-9]{2}(-[1-5][0-9]{2})?",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ResponseCount": {
          "type": "integer",
          "description": "The threshold number of responses with matching status codes.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding time window in which the number of responses with matching status codes must occur.",
          "format": "time-span"
        },
        "IncludePaths": {
          "type": [
            "array",
            "null"
          ],
          "description": "The list of request paths to monitor. If not specified, all request paths are monitored. A request path must exactly match one of the items in the list to be monitored. Request paths matching the ExcludePaths list will not be monitored.",
          "items": {
            "type": "string"
          }
        },
        "ExcludePaths": {
          "type": [
            "array",
            "null"
          ],
          "description": "The list of request paths to ignore. A request path must exactly match one of the items in the list to be ignored.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EventCounterOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ProviderName",
        "CounterName"
      ],
      "properties": {
        "ProviderName": {
          "type": "string",
          "description": "The name of the event source that provides the counter information.",
          "minLength": 1
        },
        "CounterName": {
          "type": "string",
          "description": "The name of the counter to monitor.",
          "minLength": 1
        },
        "GreaterThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level the counter must maintain (or higher) for the specified duration. Either GreaterThan or LessThan (or both) must be specified.",
          "format": "double"
        },
        "LessThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level the counter must maintain (or lower) for the specified duration. Either GreaterThan or LessThan (or both) must be specified.",
          "format": "double"
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding time window in which the counter must maintain its value as specified by the threshold levels in GreaterThan and LessThan.",
          "format": "time-span"
        }
      }
    },
    "CPUUsageOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "GreaterThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level as a percentage that the counter must maintain (or higher) for the specified duration.",
          "format": "double",
          "default": 50.0,
          "maximum": 100.0,
          "minimum": 0.0
        },
        "LessThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level as a percentage that the counter must maintain (or lower) for the specified duration. If LessThan is specified, the default value of GreaterThan becomes null.",
          "format": "double",
          "maximum": 100.0,
          "minimum": 0.0
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding time window in which the counter must maintain its value as specified by the threshold levels in GreaterThan and LessThan.",
          "format": "time-span",
          "default": "00:01:00"
        }
      }
    },
    "GCHeapSizeOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "GreaterThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level in MBs that the counter must maintain (or higher) for the specified duration.",
          "format": "double",
          "default": 10.0,
          "minimum": 0.0
        },
        "LessThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level in MBs that the counter must maintain (or lower) for the specified duration. If LessThan is specified, the default value of GreaterThan becomes null.",
          "format": "double",
          "minimum": 0.0
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding time window in which the counter must maintain its value as specified by the threshold levels in GreaterThan and LessThan.",
          "format": "time-span",
          "default": "00:01:00"
        }
      }
    },
    "ThreadpoolQueueLengthOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "GreaterThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level the counter must maintain (or higher) for the specified duration.",
          "format": "double",
          "default": 200.0,
          "minimum": 0.0
        },
        "LessThan": {
          "type": [
            "null",
            "number"
          ],
          "description": "The threshold level the counter must maintain (or lower) for the specified duration. If LessThan is specified, the default value of GreaterThan becomes null.",
          "format": "double",
          "minimum": 0.0
        },
        "SlidingWindowDuration": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sliding time window in which the counter must maintain its value as specified by the threshold levels in GreaterThan and LessThan.",
          "format": "time-span",
          "default": "00:01:00"
        }
      }
    },
    "JsonConsoleFormatterOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "JsonWriterOptions": {
          "description": "Gets or sets JsonWriterOptions.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonWriterOptions"
            }
          ]
        },
        "IncludeScopes": {
          "type": "boolean",
          "description": "Gets or sets whether scopes should be included or not."
        },
        "TimestampFormat": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets the format string used to format the timestamp in logging messages. Defaults to null."
        },
        "UseUtcTimestamp": {
          "type": "boolean",
          "description": "Gets or sets whether or not UTC timezone should be used for timestamps in logging messages. Defaults to false.",
          "default": false
        }
      }
    },
    "JsonWriterOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Encoder": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/JavaScriptEncoder"
            }
          ]
        },
        "Indented": {
          "type": "boolean"
        },
        "SkipValidation": {
          "type": "boolean"
        }
      }
    },
    "JavaScriptEncoder": {
      "allOf": [
        {
          "$ref": "#/definitions/TextEncoder"
        },
        {
          "type": "object",
          "x-abstract": true,
          "additionalProperties": false
        }
      ]
    },
    "TextEncoder": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false
    },
    "SimpleConsoleFormatterOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ColorBehavior": {
          "description": "Determines when to use color when logging messages.",
          "oneOf": [
            {
              "$ref": "#/definitions/LoggerColorBehavior"
            }
          ]
        },
        "SingleLine": {
          "type": "boolean",
          "description": "When false, the entire message gets logged in a single line."
        },
        "IncludeScopes": {
          "type": "boolean",
          "description": "Gets or sets whether scopes should be included or not."
        },
        "TimestampFormat": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets the format string used to format the timestamp in logging messages. Defaults to null."
        },
        "UseUtcTimestamp": {
          "type": "boolean",
          "description": "Gets or sets whether or not UTC timezone should be used for timestamps in logging messages. Defaults to false.",
          "default": false
        }
      }
    },
    "LoggerColorBehavior": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Default",
        "Enabled",
        "Disabled"
      ],
      "enum": [
        "Default",
        "Enabled",
        "Disabled"
      ]
    },
    "ConsoleFormatterOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IncludeScopes": {
          "type": "boolean",
          "description": "Gets or sets whether scopes should be included or not."
        },
        "TimestampFormat": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets the format string used to format the timestamp in logging messages. Defaults to null."
        },
        "UseUtcTimestamp": {
          "type": "boolean",
          "description": "Gets or sets whether or not UTC timezone should be used for timestamps in logging messages. Defaults to false.",
          "default": false
        }
      }
    }
  }
}
