{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://www.github.com/dotnet/dotnet-monitor",
  "title": "DotnetMonitorConfiguration",
  "type": "object",
  "additionalProperties": {},
  "properties": {
    "Logging": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/LoggingOptions"
        }
      ]
    },
    "ApiAuthentication": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/ApiAuthenticationOptions"
        }
      ]
    },
    "CorsConfiguration": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/CorsConfiguration"
        }
      ]
    },
    "DiagnosticPort": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/DiagnosticPortOptions"
        }
      ]
    },
    "Egress": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/EgressOptions"
        }
      ]
    },
    "Metrics": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/MetricsOptions"
        }
      ]
    },
    "Storage": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/StorageOptions"
        }
      ]
    },
    "DefaultProcess": {
      "default": {},
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/ProcessFilterOptions"
        }
      ]
    }
  },
  "definitions": {
    "LoggingOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "LogLevel": {
          "type": [
            "null",
            "object"
          ],
          "description": "A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies to no specific provider.",
          "default": {},
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/LogLevel"
              }
            ]
          }
        },
        "Console": {
          "description": "Logging options for the Console provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/ConsoleLoggerOptions"
            }
          ]
        },
        "EventLog": {
          "description": "Logging options for the EventLog provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogLevelOptions"
            }
          ]
        },
        "Debug": {
          "description": "Logging options for the Debug provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogLevelOptions"
            }
          ]
        },
        "EventSource": {
          "description": "Logging options for the EventSource provider.",
          "default": {},
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/LogLevelOptions"
            }
          ]
        },
        "CaptureScopes": {
          "type": "boolean",
          "description": "Gets or sets whether logging scopes are being captured. Defaults to true.",
          "default": true
        }
      }
    },
    "LogLevel": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ],
      "enum": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ]
    },
    "ConsoleLoggerOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "FormatterName": {
          "description": "Name of the log message formatter to use. Defaults to 'Simple'.",
          "default": "Simple",
          "oneOf": [
            {
              "$ref": "#/definitions/ConsoleLoggerFormat"
            }
          ]
        },
        "LogToStandardErrorThreshold": {
          "description": "The minimum level of messages that are written to Console.Error.",
          "oneOf": [
            {
              "$ref": "#/definitions/LogLevel"
            }
          ]
        },
        "FormatterOptions": {
          "description": "Formatter options for the built-in console log formatter.",
          "default": {},
          "oneOf": [
            {},
            {
              "type": "null"
            }
          ]
        },
        "LogLevel": {
          "type": [
            "null",
            "object"
          ],
          "description": "A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies solely to ConsoleLoggerOptions.",
          "default": {},
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/LogLevel"
              }
            ]
          }
        }
      },
      "oneOf": [
        {
          "required": [
            "FormatterName"
          ],
          "properties": {
            "FormatterName": {
              "const": "Json"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/JsonConsoleFormatterOptions"
            }
          }
        },
        {
          "required": [
            "FormatterName"
          ],
          "properties": {
            "FormatterName": {
              "const": "Simple"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/SimpleConsoleFormatterOptions"
            }
          }
        },
        {
          "required": [
            "FormatterName"
          ],
          "properties": {
            "FormatterName": {
              "const": "Systemd"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/ConsoleFormatterOptions"
            }
          }
        },
        {
          "properties": {
            "FormatterName": {
              "type": "null",
              "default": "Simple"
            },
            "FormatterOptions": {
              "$ref": "#/definitions/SimpleConsoleFormatterOptions"
            }
          }
        }
      ]
    },
    "ConsoleLoggerFormat": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Json",
        "Simple",
        "Systemd"
      ],
      "enum": [
        "Json",
        "Simple",
        "Systemd"
      ]
    },
    "LogLevelOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "LogLevel": {
          "type": [
            "null",
            "object"
          ],
          "description": "A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies to the specified provider.",
          "default": {},
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/LogLevel"
              }
            ]
          }
        }
      }
    },
    "ApiAuthenticationOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ApiKeyHash",
        "ApiKeyHashType"
      ],
      "properties": {
        "ApiKeyHash": {
          "type": "string",
          "description": "API key in hashed form. Each byte should be two hexadecimal-based digits.",
          "minLength": 64,
          "pattern": "[0-9a-fA-F]+"
        },
        "ApiKeyHashType": {
          "type": "string",
          "description": "Hash algorithm used to compute ApiKeyHash, typically 'SHA256'. 'SHA1' and 'MD5' are not allowed.",
          "minLength": 1
        }
      }
    },
    "CorsConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "AllowedOrigins"
      ],
      "properties": {
        "AllowedOrigins": {
          "type": "string",
          "description": "List of allowed CORS origins, separated by semicolons.",
          "minLength": 1
        }
      }
    },
    "DiagnosticPortOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ConnectionMode": {
          "description": "In 'Connect' mode, dotnet-monitor connects to the application for diagnostics. In 'Listen' mode, the application connects to dotnet-monitor via EndpointName.",
          "default": "Connect",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/DiagnosticPortConnectionMode"
            }
          ]
        },
        "EndpointName": {
          "type": [
            "null",
            "string"
          ],
          "description": "In 'Listen' mode, specifies the name of the named pipe or unix domain socket to use for connecting to the diagnostic server."
        },
        "MaxConnections": {
          "type": [
            "integer",
            "null"
          ],
          "description": "In 'Listen' mode, the maximum amount of connections to accept.",
          "format": "int32"
        }
      }
    },
    "DiagnosticPortConnectionMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Connect",
        "Listen"
      ],
      "enum": [
        "Connect",
        "Listen"
      ]
    },
    "EgressOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AzureBlobStorage": {
          "type": [
            "null",
            "object"
          ],
          "description": "Mapping of Azure blob storage egress provider names to their options.",
          "default": {},
          "additionalProperties": {
            "$ref": "#/definitions/AzureBlobEgressProviderOptions"
          }
        },
        "FileSystem": {
          "type": [
            "null",
            "object"
          ],
          "description": "Mapping of file system egress provider names to their options.",
          "default": {},
          "additionalProperties": {
            "$ref": "#/definitions/FileSystemEgressProviderOptions"
          }
        },
        "Properties": {
          "type": [
            "null",
            "object"
          ],
          "description": "Additional properties, such as secrets, that can be referenced by the provider definitions.",
          "default": {},
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AzureBlobEgressProviderOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "AccountUri",
        "ContainerName"
      ],
      "properties": {
        "AccountUri": {
          "type": "string",
          "description": "The URI of the Azure blob storage account.",
          "format": "uri",
          "minLength": 1
        },
        "AccountKey": {
          "type": [
            "null",
            "string"
          ],
          "description": "The account key used to access the Azure blob storage account."
        },
        "AccountKeyName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the account key used to look up the value from the Egress options Properties map."
        },
        "SharedAccessSignature": {
          "type": [
            "null",
            "string"
          ],
          "description": "The shared access signature (SAS) used to access the azure blob storage account."
        },
        "SharedAccessSignatureName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the shared access signature (SAS) used to look up the value from the Egress options Properties map."
        },
        "ContainerName": {
          "type": "string",
          "description": "The name of the container to which the blob will be egressed. If egressing to the root container, use the \"$root\" sentinel value.",
          "minLength": 1
        },
        "BlobPrefix": {
          "type": [
            "null",
            "string"
          ],
          "description": "The prefix to prepend to the blob name."
        },
        "CopyBufferSize": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Buffer size used when copying data from an egress callback returning a stream to the egress callback that is provided a stream to which data is written.",
          "format": "int32"
        }
      }
    },
    "FileSystemEgressProviderOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "DirectoryPath"
      ],
      "properties": {
        "DirectoryPath": {
          "type": "string",
          "description": "The directory path to which the stream data will be egressed.",
          "minLength": 1
        },
        "IntermediateDirectoryPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "The directory path to which the stream data will initially be written, if specified; the file will then be moved/renamed to the directory specified in DirectoryPath."
        },
        "CopyBufferSize": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Buffer size used when copying data from an egress callback returning a stream to the egress callback that is provided a stream to which data is written.",
          "format": "int32"
        }
      }
    },
    "MetricsOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Enable or disable metrics collection.",
          "default": true
        },
        "Endpoints": {
          "type": [
            "null",
            "string"
          ],
          "description": "Endpoints that expose prometheus metrics. Defaults to http://localhost:52325."
        },
        "UpdateIntervalSeconds": {
          "type": [
            "integer",
            "null"
          ],
          "description": "How often metrics are collected.",
          "format": "int32",
          "default": 10
        },
        "MetricCount": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Amount of data points to store per metric.",
          "format": "int32",
          "default": 3
        },
        "IncludeDefaultProviders": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Include default providers: System.Runtime, Microsoft.AspNetCore.Hosting, and Grpc.AspNetCore.Server.",
          "default": true
        },
        "Providers": {
          "type": [
            "array",
            "null"
          ],
          "description": "Providers for custom metrics.",
          "items": {
            "$ref": "#/definitions/MetricProvider"
          }
        }
      }
    },
    "MetricProvider": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ProviderName"
      ],
      "properties": {
        "ProviderName": {
          "type": "string",
          "description": "The name of the custom metrics provider.",
          "minLength": 1
        },
        "CounterNames": {
          "type": [
            "array",
            "null"
          ],
          "description": "Name of custom metrics counters.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DumpTempFolder": {
          "type": [
            "null",
            "string"
          ],
          "description": "The location for temporary dump files. Defaults to the temp folder."
        }
      }
    },
    "ProcessFilterOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Filters": {
          "type": [
            "array",
            "null"
          ],
          "description": "Process filters used to determine which process to use if one is not explicitly specified. All filters must match.",
          "items": {
            "$ref": "#/definitions/ProcessFilterDescriptor"
          }
        }
      }
    },
    "ProcessFilterDescriptor": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Key",
        "Value"
      ],
      "properties": {
        "Key": {
          "description": "The criteria used to compare against the target process.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProcessFilterKey"
            }
          ]
        },
        "Value": {
          "type": "string",
          "description": "The value of the criteria used to compare against the target process.",
          "minLength": 1
        },
        "MatchType": {
          "description": "Type of match to use against the process criteria.",
          "default": "Exact",
          "oneOf": [
            {
              "$ref": "#/definitions/ProcessFilterType"
            }
          ]
        }
      }
    },
    "ProcessFilterKey": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ProcessId",
        "ProcessName",
        "CommandLine"
      ],
      "enum": [
        "ProcessId",
        "ProcessName",
        "CommandLine"
      ]
    },
    "ProcessFilterType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Exact",
        "Contains"
      ],
      "enum": [
        "Exact",
        "Contains"
      ]
    },
    "JsonConsoleFormatterOptions": {
      "title": "JsonConsoleFormatterOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "JsonWriterOptions": {
          "description": "Gets or sets JsonWriterOptions.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonConsoleFormatterOptions/definitions/JsonWriterOptions"
            }
          ]
        },
        "IncludeScopes": {
          "type": "boolean",
          "description": "Gets or sets whether scopes should be included or not."
        },
        "TimestampFormat": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets the format string used to format the timestamp in logging messages. Defaults to null."
        },
        "UseUtcTimestamp": {
          "type": "boolean",
          "description": "Gets or sets whether or not UTC timezone should be used for timestamps in logging messages. Defaults to false.",
          "default": false
        }
      },
      "definitions": {
        "JsonWriterOptions": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Encoder": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/definitions/JsonConsoleFormatterOptions/definitions/JavaScriptEncoder"
                }
              ]
            },
            "Indented": {
              "type": "boolean"
            },
            "SkipValidation": {
              "type": "boolean"
            }
          }
        },
        "JavaScriptEncoder": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonConsoleFormatterOptions/definitions/TextEncoder"
            },
            {
              "type": "object",
              "x-abstract": true,
              "additionalProperties": false
            }
          ]
        },
        "TextEncoder": {
          "type": "object",
          "x-abstract": true,
          "additionalProperties": false
        }
      }
    },
    "SimpleConsoleFormatterOptions": {
      "title": "SimpleConsoleFormatterOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ColorBehavior": {
          "description": "Determines when to use color when logging messages.",
          "oneOf": [
            {
              "$ref": "#/definitions/SimpleConsoleFormatterOptions/definitions/LoggerColorBehavior"
            }
          ]
        },
        "SingleLine": {
          "type": "boolean",
          "description": "When false, the entire message gets logged in a single line."
        },
        "IncludeScopes": {
          "type": "boolean",
          "description": "Gets or sets whether scopes should be included or not."
        },
        "TimestampFormat": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets the format string used to format the timestamp in logging messages. Defaults to null."
        },
        "UseUtcTimestamp": {
          "type": "boolean",
          "description": "Gets or sets whether or not UTC timezone should be used for timestamps in logging messages. Defaults to false.",
          "default": false
        }
      },
      "definitions": {
        "LoggerColorBehavior": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ]
        }
      }
    },
    "ConsoleFormatterOptions": {
      "title": "ConsoleFormatterOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IncludeScopes": {
          "type": "boolean",
          "description": "Gets or sets whether scopes should be included or not."
        },
        "TimestampFormat": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets the format string used to format the timestamp in logging messages. Defaults to null."
        },
        "UseUtcTimestamp": {
          "type": "boolean",
          "description": "Gets or sets whether or not UTC timezone should be used for timestamps in logging messages. Defaults to false.",
          "default": false
        }
      }
    }
  }
}