{
  "openapi": "3.0.1",
  "info": {
    "title": "dotnet-monitor",
    "version": "1.0"
  },
  "paths": {
    "/processes": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Get the list of accessible processes.",
        "operationId": "GetProcesses",
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessIdentifier"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/process": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Get information about the specified process.",
        "operationId": "GetProcessInfo",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfo"
                }
              }
            }
          }
        }
      }
    },
    "/env": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Get the environment block of the specified process.",
        "operationId": "GetProcessEnvironment",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dump": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Capture a dump of a process.",
        "operationId": "CaptureDump",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of dump to capture.",
            "schema": {
              "$ref": "#/components/schemas/DumpType"
            }
          },
          {
            "name": "egressProvider",
            "in": "query",
            "description": "The egress provider to which the dump is saved.",
            "schema": {
              "type": "string",
              "description": "The egress provider to which the dump is saved.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequestsResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          }
        }
      }
    },
    "/gcdump": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Capture a GC dump of a process.",
        "operationId": "CaptureGcDump",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          },
          {
            "name": "egressProvider",
            "in": "query",
            "description": "The egress provider to which the GC dump is saved.",
            "schema": {
              "type": "string",
              "description": "The egress provider to which the GC dump is saved.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequestsResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          }
        }
      }
    },
    "/trace": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Capture a trace of a process.",
        "operationId": "CaptureTrace",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "The profiles enabled for the trace session.",
            "schema": {
              "$ref": "#/components/schemas/TraceProfile"
            }
          },
          {
            "name": "durationSeconds",
            "in": "query",
            "description": "The duration of the trace session (in seconds).",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "description": "The duration of the trace session (in seconds).",
              "format": "int32",
              "default": 30
            }
          },
          {
            "name": "metricsIntervalSeconds",
            "in": "query",
            "description": "The reporting interval (in seconds) for event counters.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "description": "The reporting interval (in seconds) for event counters.",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "egressProvider",
            "in": "query",
            "description": "The egress provider to which the trace is saved.",
            "schema": {
              "type": "string",
              "description": "The egress provider to which the trace is saved.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequestsResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Diag"
        ],
        "summary": "Capture a trace of a process.",
        "operationId": "CaptureTraceCustom",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          },
          {
            "name": "durationSeconds",
            "in": "query",
            "description": "The duration of the trace session (in seconds).",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "description": "The duration of the trace session (in seconds).",
              "format": "int32",
              "default": 30
            }
          },
          {
            "name": "egressProvider",
            "in": "query",
            "description": "The egress provider to which the trace is saved.",
            "schema": {
              "type": "string",
              "description": "The egress provider to which the trace is saved.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The trace configuration describing which events to capture.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPipeConfiguration"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPipeConfiguration"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventPipeConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequestsResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          }
        }
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Capture a stream of logs from a process.",
        "operationId": "CaptureLogs",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          },
          {
            "name": "durationSeconds",
            "in": "query",
            "description": "The duration of the logs session (in seconds).",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "description": "The duration of the logs session (in seconds).",
              "format": "int32",
              "default": 30
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "The level of the logs to capture.",
            "schema": {
              "$ref": "#/components/schemas/LogLevel"
            }
          },
          {
            "name": "egressProvider",
            "in": "query",
            "description": "The egress provider to which the logs are saved.",
            "schema": {
              "type": "string",
              "description": "The egress provider to which the logs are saved.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequestsResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json-seq": {
                "schema": {
                  "type": "string"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Diag"
        ],
        "summary": "Capture a stream of logs from a process.",
        "operationId": "CaptureLogsCustom",
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "description": "Process ID used to identify the target process.",
            "schema": {
              "type": "integer",
              "description": "Process ID used to identify the target process.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "The Runtime instance cookie used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "The Runtime instance cookie used to identify the target process.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Process name used to identify the target process.",
            "schema": {
              "type": "string",
              "description": "Process name used to identify the target process.",
              "nullable": true
            }
          },
          {
            "name": "durationSeconds",
            "in": "query",
            "description": "The duration of the logs session (in seconds).",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "description": "The duration of the logs session (in seconds).",
              "format": "int32",
              "default": 30
            }
          },
          {
            "name": "egressProvider",
            "in": "query",
            "description": "The egress provider to which the logs are saved.",
            "schema": {
              "type": "string",
              "description": "The egress provider to which the logs are saved.",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The logs configuration describing which logs to capture.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogsConfiguration"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogsConfiguration"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogsConfiguration"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequestsResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json-seq": {
                "schema": {
                  "type": "string"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": [
          "Diag"
        ],
        "summary": "Gets versioning and listening mode information about Dotnet-Monitor",
        "operationId": "GetInfo",
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DotnetMonitorInfo"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get a list of the current backlog of metrics for a process in the Prometheus exposition format.",
        "operationId": "GetMetrics",
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain; version=0.0.4": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/operations/{operationId}": {
      "get": {
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": { }
      },
      "ProcessIdentifier": {
        "type": "object",
        "properties": {
          "pid": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProcessInfo": {
        "type": "object",
        "properties": {
          "pid": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commandLine": {
            "type": "string",
            "nullable": true
          },
          "operatingSystem": {
            "type": "string",
            "nullable": true
          },
          "processArchitecture": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DumpType": {
        "enum": [
          "Full",
          "Mini",
          "WithHeap",
          "Triage"
        ],
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "TraceProfile": {
        "enum": [
          "Cpu",
          "Http",
          "Logs",
          "Metrics"
        ],
        "type": "string"
      },
      "EventLevel": {
        "enum": [
          "LogAlways",
          "Critical",
          "Error",
          "Warning",
          "Informational",
          "Verbose"
        ],
        "type": "string"
      },
      "EventPipeProvider": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "keywords": {
            "type": "string",
            "nullable": true
          },
          "eventLevel": {
            "$ref": "#/components/schemas/EventLevel"
          },
          "arguments": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventPipeConfiguration": {
        "required": [
          "providers"
        ],
        "type": "object",
        "properties": {
          "providers": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPipeProvider"
            }
          },
          "requestRundown": {
            "type": "boolean"
          },
          "bufferSizeInMB": {
            "maximum": 1024,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LogLevel": {
        "enum": [
          "Trace",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Critical",
          "None"
        ],
        "type": "string"
      },
      "LogsConfiguration": {
        "required": [
          "logLevel"
        ],
        "type": "object",
        "properties": {
          "logLevel": {
            "$ref": "#/components/schemas/LogLevel"
          },
          "filterSpecs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LogLevel"
            },
            "description": "The logger categories and levels at which logs are collected. Setting the log level to null will have logs collected from the corresponding category at the level set in the LogLevel property.",
            "nullable": true
          },
          "useAppFilters": {
            "type": "boolean",
            "description": "Set to true to collect logs at the application-defined categories and levels."
          }
        },
        "additionalProperties": false
      },
      "DiagnosticPortConnectionMode": {
        "enum": [
          "Connect",
          "Listen"
        ],
        "type": "string"
      },
      "DotnetMonitorInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "The dotnet monitor version.",
            "nullable": true
          },
          "runtimeVersion": {
            "type": "string",
            "description": "The dotnet runtime version.",
            "nullable": true
          },
          "diagnosticPortMode": {
            "$ref": "#/components/schemas/DiagnosticPortConnectionMode"
          },
          "diagnosticPortName": {
            "type": "string",
            "description": "The name of the named pipe or unix domain socket to use for connecting to the diagnostic server.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperationState": {
        "enum": [
          "Running",
          "Succeeded",
          "Failed",
          "Cancelled"
        ],
        "type": "string"
      },
      "OperationSummary": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "format": "uuid"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/OperationState"
          }
        },
        "additionalProperties": false,
        "description": "Represents a partial model when enumerating all operations."
      },
      "OperationError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperationStatus": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "format": "uuid"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/OperationState"
          },
          "resourceLocation": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/OperationError"
          }
        },
        "additionalProperties": false,
        "description": "Represents the state of a long running operation. Used for all types of results, including successes and failures."
      }
    },
    "responses": {
      "BadRequestResponse": {
        "description": "Bad Request",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationProblemDetails"
            }
          }
        }
      },
      "UnauthorizedResponse": {
        "description": "Unauthorized",
        "headers": {
          "WWW_Authenticate": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "TooManyRequestsResponse": {
        "description": "TooManyRequests",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      }
    }
  }
}