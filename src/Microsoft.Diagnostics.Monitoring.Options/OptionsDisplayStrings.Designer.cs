//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Diagnostics.Monitoring.WebApi {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class OptionsDisplayStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OptionsDisplayStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Diagnostics.Monitoring.Options.OptionsDisplayStrings", typeof(OptionsDisplayStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameters used to validate MonitorApiKey JWT tokens..
        /// </summary>
        public static string DisplayAttributeDescription_AuthenticationOptions_MonitorApiKey {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AuthenticationOptions_MonitorApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account key used to access the Azure blob storage account..
        /// </summary>
        public static string DisplayAttributeDescription_AzureBlobEgressProviderOptions_AccountKey {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AzureBlobEgressProviderOptions_AccountKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the account key used to look up the value from the Egress options Properties map..
        /// </summary>
        public static string DisplayAttributeDescription_AzureBlobEgressProviderOptions_AccountKeyName {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AzureBlobEgressProviderOptions_AccountKeyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URI of the Azure blob storage account..
        /// </summary>
        public static string DisplayAttributeDescription_AzureBlobEgressProviderOptions_AccountUri {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AzureBlobEgressProviderOptions_AccountUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The prefix to prepend to the blob name..
        /// </summary>
        public static string DisplayAttributeDescription_AzureBlobEgressProviderOptions_BlobPrefix {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AzureBlobEgressProviderOptions_BlobPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the container to which the blob will be egressed. If egressing to the root container, use the &quot;$root&quot; sentinel value..
        /// </summary>
        public static string DisplayAttributeDescription_AzureBlobEgressProviderOptions_ContainerName {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AzureBlobEgressProviderOptions_ContainerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shared access signature (SAS) used to access the azure blob storage account..
        /// </summary>
        public static string DisplayAttributeDescription_AzureBlobEgressProviderOptions_SharedAccessSignature {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AzureBlobEgressProviderOptions_SharedAccessSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the shared access signature (SAS) used to look up the value from the Egress options Properties map..
        /// </summary>
        public static string DisplayAttributeDescription_AzureBlobEgressProviderOptions_SharedAccessSignatureName {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_AzureBlobEgressProviderOptions_SharedAccessSignatureN" +
                        "ame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer size used when copying data from an egress callback returning a stream to the egress callback that is provided a stream to which data is written..
        /// </summary>
        public static string DisplayAttributeDescription_CommonEgressProviderOptions_CopyBufferSize {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_CommonEgressProviderOptions_CopyBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets whether scopes should be included or not..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleFormatterOptions_IncludeScopes {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleFormatterOptions_IncludeScopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets the format string used to format the timestamp in logging messages. Defaults to null..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleFormatterOptions_TimestampFormat {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleFormatterOptions_TimestampFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets whether or not UTC timezone should be used for timestamps in logging messages. Defaults to false..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleFormatterOptions_UseUtcTimestamp {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleFormatterOptions_UseUtcTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved name for Json console formatter..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleLoggerFormat_Json {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleLoggerFormat_Json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved name for simple console formatter..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleLoggerFormat_Simple {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleLoggerFormat_Simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved name for systemd console formatter..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleLoggerFormat_Systemd {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleLoggerFormat_Systemd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the log message formatter to use. Defaults to &apos;Simple&apos;..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleLoggerOptions_FormatterName {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleLoggerOptions_FormatterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatter options for the built-in console log formatter..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleLoggerOptions_FormatterOptions {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleLoggerOptions_FormatterOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies solely to ConsoleLoggerOptions..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleLoggerOptions_LogLevel {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleLoggerOptions_LogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum level of messages that are written to Console.Error..
        /// </summary>
        public static string DisplayAttributeDescription_ConsoleLoggerOptions_LogToStandardErrorThreshold {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ConsoleLoggerOptions_LogToStandardErrorThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of allowed CORS origins, separated by semicolons..
        /// </summary>
        public static string DisplayAttributeDescription_CorsConfiguration_AllowedOrigins {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_CorsConfiguration_AllowedOrigins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In &apos;Connect&apos; mode, dotnet-monitor connects to the application for diagnostics. In &apos;Listen&apos; mode, the application connects to dotnet-monitor via EndpointName..
        /// </summary>
        public static string DisplayAttributeDescription_DiagnosticPortOptions_ConnectionMode {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_DiagnosticPortOptions_ConnectionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In &apos;Listen&apos; mode, specifies the name of the named pipe or unix domain socket to use for connecting to the diagnostic server..
        /// </summary>
        public static string DisplayAttributeDescription_DiagnosticPortOptions_EndpointName {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_DiagnosticPortOptions_EndpointName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In &apos;Listen&apos; mode, the maximum amount of connections to accept..
        /// </summary>
        public static string DisplayAttributeDescription_DiagnosticPortOptions_MaxConnections {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_DiagnosticPortOptions_MaxConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapping of Azure blob storage egress provider names to their options..
        /// </summary>
        public static string DisplayAttributeDescription_EgressOptions_AzureBlobStorage {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_EgressOptions_AzureBlobStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapping of file system egress provider names to their options..
        /// </summary>
        public static string DisplayAttributeDescription_EgressOptions_FileSystem {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_EgressOptions_FileSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional properties, such as secrets, that can be referenced by the provider definitions..
        /// </summary>
        public static string DisplayAttributeDescription_EgressOptions_Properties {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_EgressOptions_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory path to which the stream data will be egressed..
        /// </summary>
        public static string DisplayAttributeDescription_FileSystemEgressProviderOptions_DirectoryPath {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_FileSystemEgressProviderOptions_DirectoryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory path to which the stream data will initially be written, if specified; the file will then be moved/renamed to the directory specified in DirectoryPath..
        /// </summary>
        public static string DisplayAttributeDescription_FileSystemEgressProviderOptions_IntermediateDirectoryPath {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_FileSystemEgressProviderOptions_IntermediateDirectory" +
                        "Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets JsonWriterOptions..
        /// </summary>
        public static string DisplayAttributeDescription_JsonConsoleFormatterOptions_WriterOptions {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_JsonConsoleFormatterOptions_WriterOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets whether logging scopes are being captured. Defaults to true..
        /// </summary>
        public static string DisplayAttributeDescription_LoggingOptions_CaptureScopes {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_LoggingOptions_CaptureScopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging options for the Console provider..
        /// </summary>
        public static string DisplayAttributeDescription_LoggingOptions_Console {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_LoggingOptions_Console", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging options for the Debug provider..
        /// </summary>
        public static string DisplayAttributeDescription_LoggingOptions_Debug {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_LoggingOptions_Debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging options for the EventLog provider..
        /// </summary>
        public static string DisplayAttributeDescription_LoggingOptions_EventLog {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_LoggingOptions_EventLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging options for the EventSource provider..
        /// </summary>
        public static string DisplayAttributeDescription_LoggingOptions_EventSource {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_LoggingOptions_EventSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies to no specific provider..
        /// </summary>
        public static string DisplayAttributeDescription_LoggingOptions_LogLevel {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_LoggingOptions_LogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A mapping of logger categories to log levels describing the threshold level at which messages are logged for each category; applies to the specified provider..
        /// </summary>
        public static string DisplayAttributeDescription_LogLevelOptions_LogLevel {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_LogLevelOptions_LogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of custom metrics counters..
        /// </summary>
        public static string DisplayAttributeDescription_MetricProvider_CounterNames {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricProvider_CounterNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the custom metrics provider..
        /// </summary>
        public static string DisplayAttributeDescription_MetricProvider_ProviderName {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricProvider_ProviderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable or disable metrics collection..
        /// </summary>
        public static string DisplayAttributeDescription_MetricsOptions_Enabled {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricsOptions_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoints that expose prometheus metrics. Defaults to http://localhost:52325..
        /// </summary>
        public static string DisplayAttributeDescription_MetricsOptions_Endpoints {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricsOptions_Endpoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include default providers: System.Runtime, Microsoft.AspNetCore.Hosting, and Grpc.AspNetCore.Server..
        /// </summary>
        public static string DisplayAttributeDescription_MetricsOptions_IncludeDefaultProviders {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricsOptions_IncludeDefaultProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of data points to store per metric..
        /// </summary>
        public static string DisplayAttributeDescription_MetricsOptions_MetricCount {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricsOptions_MetricCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Providers for custom metrics..
        /// </summary>
        public static string DisplayAttributeDescription_MetricsOptions_Providers {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricsOptions_Providers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How often metrics are collected..
        /// </summary>
        public static string DisplayAttributeDescription_MetricsOptions_UpdateIntervalSeconds {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MetricsOptions_UpdateIntervalSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The public key used to sign the JWT (JSON Web Token) used for authentication. This field is a JSON Web Key serialized as JSON encoded with base64Url encoding. The JWK must have a kty field of RSA or EC and should not have the private key information..
        /// </summary>
        public static string DisplayAttributeDescription_MonitorApiKeyOptions_PublicKey {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MonitorApiKeyOptions_PublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the &apos;sub&apos; or Subject field in the JWT (JSON Web Token)..
        /// </summary>
        public static string DisplayAttributeDescription_MonitorApiKeyOptions_Subject {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_MonitorApiKeyOptions_Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The criteria used to compare against the target process..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterDescriptor_Key {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterDescriptor_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of match to use against the process criteria..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterDescriptor_MatchType {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterDescriptor_MatchType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the criteria used to compare against the target process..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterDescriptor_Value {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterDescriptor_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs a match based on the contents of the command passed to launch the process on the system; this typically includes the executable path and arguments to the process..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterKey_CommandLine {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterKey_CommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs a match based on the numerical ID of a process on the system..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterKey_ProcessId {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterKey_ProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs a match based on the name of a process on the system..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterKey_ProcessName {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterKey_ProcessName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process filters used to determine which process to use if one is not explicitly specified. All filters must match..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterOptions_Filters {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterOptions_Filters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs a case-insensitive substring search..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterType_Contains {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterType_Contains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs a case-insensitive string comparison..
        /// </summary>
        public static string DisplayAttributeDescription_ProcessFilterType_Exact {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_ProcessFilterType_Exact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines when to use color when logging messages..
        /// </summary>
        public static string DisplayAttributeDescription_SimpleConsoleFormatterOptions_ColorBehavior {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_SimpleConsoleFormatterOptions_ColorBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When false, the entire message gets logged in a single line..
        /// </summary>
        public static string DisplayAttributeDescription_SimpleConsoleFormatterOptions_SingleLine {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_SimpleConsoleFormatterOptions_SingleLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The location for temporary dump files. Defaults to the temp folder..
        /// </summary>
        public static string DisplayAttributeDescription_StorageOptions_DumpTempFolder {
            get {
                return ResourceManager.GetString("DisplayAttributeDescription_StorageOptions_DumpTempFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} field or the {1} field is required..
        /// </summary>
        public static string ErrorMessage_TwoFieldsMissing {
            get {
                return ResourceManager.GetString("ErrorMessage_TwoFieldsMissing", resourceCulture);
            }
        }
    }
}
