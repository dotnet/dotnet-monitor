<Project>
  <Import Project="$(MSBuildThisFileDirectory)..\Directory.Build.props"/>
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <IsShipping>false</IsShipping>
    <WarnOnPackingNonPackableProject>false</WarnOnPackingNonPackableProject>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <DebugSymbols>true</DebugSymbols>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <!-- Executables for these runtime identifiers do not require notarization. -->
    <SignOnlyRuntimeIdentifiers>linux-arm64;linux-x64;linux-musl-arm64;linux-musl-x64;win-arm64;win-x64;win-x86</SignOnlyRuntimeIdentifiers>
    <!-- OSX requires executables to be notarized; separate these out from the others so they can be excluded when producing executable shims -->
    <SignAndNotarizeRuntimeIdentifiers>osx-arm64;osx-x64</SignAndNotarizeRuntimeIdentifiers>
    <DefaultRuntimeIdentifiers>$(SignOnlyRuntimeIdentifiers);$(SignAndNotarizeRuntimeIdentifiers)</DefaultRuntimeIdentifiers>
    <DisableCustomBlobStoragePublishing Condition="'$(DisableCustomBlobStoragePublishing)' == ''">false</DisableCustomBlobStoragePublishing>
    <TestRunnerTestTimeoutMinutes>15</TestRunnerTestTimeoutMinutes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net462'">
    <DebugType>full</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' != 'net462'">
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ContinuousIntegrationBuild)' == 'true'">
    <TestRunnerAdditionalArguments>--blame "CollectHangDump;TestTimeout=$(TestRunnerTestTimeoutMinutes)m"</TestRunnerAdditionalArguments>
  </PropertyGroup>

  <!-- Filter tests based on specified TestGroup -->
  <PropertyGroup Condition="'$(TestGroup)' == 'PR'">
    <!-- Only run tests for .NET 8 -->
    <TestRunnerFilterArguments>TargetFrameworkMoniker=Net80</TestRunnerFilterArguments>
    <TestRunnerAdditionalArguments>$(TestRunnerAdditionalArguments) --filter "$(TestRunnerFilterArguments)"</TestRunnerAdditionalArguments>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Private.Uri" Version="$(SystemPrivateUriVersion)" />
  </ItemGroup>

  <ItemGroup>
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)linux-arm64.$(Configuration)" TargetRid="linux-arm64" LibraryPrefix="lib" LibraryExtension=".so" SymbolsExtension=".so.dbg" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)linux-x64.$(Configuration)" TargetRid="linux-x64" LibraryPrefix="lib" LibraryExtension=".so" SymbolsExtension=".so.dbg" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)linux-musl-arm64.$(Configuration)" TargetRid="linux-musl-arm64" LibraryPrefix="lib" LibraryExtension=".so" SymbolsExtension=".so.dbg" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)linux-musl-x64.$(Configuration)" TargetRid="linux-musl-x64" LibraryPrefix="lib" LibraryExtension=".so" SymbolsExtension=".so.dbg" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)osx-arm64.$(Configuration)" TargetRid="osx-arm64" LibraryPrefix="lib" LibraryExtension=".dylib" SymbolsExtension=".dylib.dwarf" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)osx-x64.$(Configuration)" TargetRid="osx-x64" LibraryPrefix="lib" LibraryExtension=".dylib" SymbolsExtension=".dylib.dwarf" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)win-arm64.$(Configuration)" TargetRid="win-arm64" LibraryPrefix="" LibraryExtension=".dll" SymbolsExtension=".pdb" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)win-x64.$(Configuration)" TargetRid="win-x64" LibraryPrefix="" LibraryExtension=".dll" SymbolsExtension=".pdb" />
    <NativeArtifactDirectories Include="$(ArtifactsBinDir)win-x86.$(Configuration)" TargetRid="win-x86" LibraryPrefix="" LibraryExtension=".dll" SymbolsExtension=".pdb" />
  </ItemGroup>

  <ItemGroup>
    <!-- Profiler library items for all of the native platforms. -->
    <MonitorProfilerLibraryFile Include="@(NativeArtifactDirectories->'%(Identity)\%(LibraryPrefix)MonitorProfiler%(LibraryExtension)')" />
    <MutatingMonitorProfilerLibraryFile Include="@(NativeArtifactDirectories->'%(Identity)\%(LibraryPrefix)MutatingMonitorProfiler%(LibraryExtension)')" />
  </ItemGroup>

  <ItemGroup>
    <!-- Profiler symbols items for all of the native platforms. -->
    <MonitorProfilerSymbolsFile Include="@(NativeArtifactDirectories->'%(Identity)\%(LibraryPrefix)MonitorProfiler%(SymbolsExtension)')" />
    <MutatingMonitorProfilerSymbolsFile Include="@(NativeArtifactDirectories->'%(Identity)\%(LibraryPrefix)MutatingMonitorProfiler%(SymbolsExtension)')" />
    <CommonMonitorProfilerSymbolsFile Include="@(NativeArtifactDirectories->'%(Identity)\%(LibraryPrefix)CommonMonitorProfiler%(SymbolsExtension)')" />
  </ItemGroup>

  <Import Project="$(RepositoryEngineeringDir)Analyzers.props" />
  <Import Project="$(RepositoryEngineeringDir)Helix.props" />
  <Import Project="$(RepositoryEngineeringDir)native\naming.props" />
</Project>
