<Project>
  <Import Project="$(MSBuildThisFileDirectory)..\Directory.Build.targets" />

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Archives" Version="$(MicrosoftDotNetBuildTasksArchivesVersion)" />
  </ItemGroup>
  
  <Target Name="PublishToDisk"
          DependsOnTargets="$(PublishToDiskDependsOn)">
    <Error Message="The 'ArchiveContentRootPath' property must be set to the path of the root of the files to archive."
           Condition="'$(ArchiveContentRootPath)' == ''" />
    <Error Message="The archive content root path '$(ArchiveContentRootPath)' does not exist."
           Condition="!Exists($(ArchiveContentRootPath))" />
    <!-- Collect non-symbol files and copy to staging directory -->
    <ItemGroup>
      <_FileToArchive Remove="@(_FileToArchive)" />
      <_FileToArchive Include="@(FileToArchive)" />
    </ItemGroup>
    <ItemGroup>
      <_FileToArchive Condition="'%(_FileToArchive.PackagePath)' == ''">
        <PackagePath>%(RecursiveDir)</PackagePath>
      </_FileToArchive>
    </ItemGroup>
    <Copy SourceFiles="@(_FileToArchive)" DestinationFiles="$(OutputPath)%(PackagePath)%(Filename)%(Extension)" />
    <!-- Make executable files readable by all, writable by the user, and executable by all. -->
    <ItemGroup>
      <_ArchiveExecutableContent Remove="@(_ArchiveExecutableContent)" />
      <_ArchiveExecutableContent Include="@(_FileToArchive)"
                                 Condition="'%(Extension)' == '.dylib' or '%(Extension)' == '.so'" />
    </ItemGroup>
    <Exec Command="chmod 755 %(_ArchiveExecutableContent.Identity)"
          Condition="!$([MSBuild]::IsOSPlatform(Windows)) and '@(_ArchiveExecutableContent)' != ''" />
    <!-- Make non-executable files readable by all and writable by the user. -->
    <ItemGroup>
      <_ArchiveNonExecutableContent Remove="@(_ArchiveNonExecutableContent)" />
      <_ArchiveNonExecutableContent Include="@(_FileToArchive)" />
      <_ArchiveNonExecutableContent Remove="@(_ArchiveExecutableContent)" />
    </ItemGroup>
    <Exec Command="chmod 644 %(_ArchiveNonExecutableContent.Identity)"
          Condition="!$([MSBuild]::IsOSPlatform(Windows)) and '@(_ArchiveNonExecutableContent)' != ''" />
  </Target>

  <Target Name="PublishSymbolsToDisk"
          DependsOnTargets="$(PublishSymbolsToDiskDependsOn)">
    <!-- Collect symbol files and copy to staging directory -->
    <ItemGroup>
      <_SymbolFileToArchive Remove="@(_SymbolFileToArchive)" />
      <_SymbolFileToArchive Include="@(SymbolFileToArchive)" />
    </ItemGroup>
    <ItemGroup>
      <_SymbolFileToArchive Condition="'%(_SymbolFileToArchive.PackagePath)' == ''">
        <PackagePath>%(RecursiveDir)</PackagePath>
      </_SymbolFileToArchive>
    </ItemGroup>
    <Copy SourceFiles="@(_SymbolFileToArchive)" DestinationFiles="$(SymbolsOutputPath)%(PackagePath)%(Filename)%(Extension)" />
    <!-- Make non-executable files readable by all and writable by the user. -->
    <ItemGroup>
      <_SymbolsNonExecutableContent Remove="@(_SymbolsNonExecutableContent)" />
      <_SymbolsNonExecutableContent Include="@(_SymbolFileToArchive)" />
    </ItemGroup>
    <Exec Command="chmod 644 %(_SymbolsNonExecutableContent.Identity)"
          Condition="!$([MSBuild]::IsOSPlatform(Windows)) and '@(_SymbolsNonExecutableContent)' != ''" />
  </Target>
</Project>
