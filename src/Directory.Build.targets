<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />
  
  <!-- Work around https://github.com/dotnet/sourcelink/issues/572
  Remove once we build using an SDK that contains https://github.com/dotnet/sdk/pull/10613 -->
  <PropertyGroup>
    <TargetFrameworkMonikerAssemblyAttributesPath>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)"/>
  </ItemGroup>

  <!-- Creates artifact files related to the package that will be uploaded to blob storage during publish. -->
  <Target Name="GeneratePackageArtifactFiles"
          AfterTargets="Pack"
          Condition="'$(IsPackable)' == 'true' and '$(BlobGroupPrefix)' != ''">
    <PropertyGroup>
      <!--
        These properties take a package version and transform it into a blob group name so that
        all builds from the same product and release version are grouped together. This code has
        to consider when the version is a release version (e.g. 5.0.0) or has a prerelease label
        (e.g. 5.0.0-preview.1). The former is transformed into '$(BlobGroupPrefix)5.0/release' whereas
        the latter is transformed into '$(BlobGroupPrefix)5.0/preview.1'. It also accounts for the
        BlobGroupBuildQuality defined in Version.props, which determines if the prerelease information
        should be used in the final blob group name.
        -->
      <_PreReleaseSeperatorIndex>$(PackageVersion.IndexOf('-'))</_PreReleaseSeperatorIndex>
      
      <!-- Prerelease: '5.0.0-preview.1' -> '5.0.0' and 'preview.1' -->
      <_BlobGroupVersion Condition="'$(_PreReleaseSeperatorIndex)' != '-1'">$(PackageVersion.Substring(0, $(_PreReleaseSeperatorIndex)))</_BlobGroupVersion>
      <_BlobGroupPreRelease Condition="'$(_PreReleaseSeperatorIndex)' != '-1'">$(PackageVersion.Substring($([MSBuild]::Add($(_PreReleaseSeperatorIndex), 1))))</_BlobGroupPreRelease>
      
      <!-- Release: take the package version as-is. -->
      <_BlobGroupVersion Condition="'$(_PreReleaseSeperatorIndex)' == '-1'">$(PackageVersion)</_BlobGroupVersion>

      <!--
        Prerelease may contain additional fields; only want the label and first number
        (e.g. 'preview.1.12345' -> 'preview' and '1').
        -->
      <_BlobGroupPreReleaseLabel Condition="'$(_BlobGroupPreRelease)' != ''">$(_BlobGroupPreRelease.Split('.')[0])</_BlobGroupPreReleaseLabel>
      <_BlobGroupPreReleaseIteration Condition="'$(_BlobGroupPreRelease)' != ''">$(_BlobGroupPreRelease.Split('.')[1])</_BlobGroupPreReleaseIteration>

      <!--
        Calculate release name based on version parts and blob group build quality.
        Daily: use 'daily'
        Prerelease: 'preview' and '1' -> 'preview.1'
        Release: use 'release'
        -->
      <_BlobGroupReleaseName  Condition="'$(BlobGroupBuildQuality)' == 'daily'">daily</_BlobGroupReleaseName>
      <_BlobGroupReleaseName  Condition="'$(BlobGroupBuildQuality)' == 'prerelease'">$(_BlobGroupPreReleaseLabel).$(_BlobGroupPreReleaseIteration)</_BlobGroupReleaseName>
      <_BlobGroupReleaseName  Condition="'$(BlobGroupBuildQuality)' == 'release'">release</_BlobGroupReleaseName>

      <!-- Extract major and minor version fields from version number. -->
      <_BlobGroupVersionMajor>$(_BlobGroupVersion.Split('.')[0])</_BlobGroupVersionMajor>
      <_BlobGroupVersionMinor>$(_BlobGroupVersion.Split('.')[1])</_BlobGroupVersionMinor>

      <!--
        Combine all parts to create blob group name. For example (with BlobGroupPrefix = 'monitor'):
        Daily: '5.0.0-preview.1.12345' -> 'monitor5.0/daily'
        Prerelease: '5.0.0-preview.1.12345' -> 'monitor5.0/preview.1'
        Release: '5.0.0' -> 'monitor5.0/release'
        -->
      <_BlobGroupName>$(BlobGroupPrefix)$(_BlobGroupVersionMajor).$(_BlobGroupVersionMinor)/$(_BlobGroupReleaseName)</_BlobGroupName>
    </PropertyGroup>
    <!-- A file that contains the blob group so that publishing can use it in the blob path calculation. -->
    <WriteLinesToFile File="$(PackageOutputPath)\$(PackageId).$(PackageVersion).nupkg.blobgroup"
                      Lines="$(_BlobGroupName)"
                      Overwrite="true" />
    <WriteLinesToFile File="$(PackageOutputPath)\$(PackageId).$(PackageVersion).nupkg.version"
                      Lines="$(PackageVersion)"
                      Overwrite="true" />
  </Target>

</Project>
