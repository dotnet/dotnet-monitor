//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Diagnostics.Tools.Monitor {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Diagnostics.Tools.Monitor.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API key authentication not configured..
        /// </summary>
        internal static string ErrorMessage_ApiKeyNotConfigured {
            get {
                return ResourceManager.GetString("ErrorMessage_ApiKeyNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find a collection rule with name {0}..
        /// </summary>
        internal static string ErrorMessage_CollectionRuleNotFound {
            get {
                return ResourceManager.GetString("ErrorMessage_CollectionRuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; action was not registered correctly..
        /// </summary>
        internal static string ErrorMessage_CouldNotMapToAction {
            get {
                return ResourceManager.GetString("ErrorMessage_CouldNotMapToAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; trigger was not registered correctly..
        /// </summary>
        internal static string ErrorMessage_CouldNotMapToTrigger {
            get {
                return ResourceManager.GetString("ErrorMessage_CouldNotMapToTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In &apos;Listen&apos; mode, the diagnostic port endpoint name must be specified..
        /// </summary>
        internal static string ErrorMessage_DiagnosticPortMissingInListenMode {
            get {
                return ResourceManager.GetString("ErrorMessage_DiagnosticPortMissingInListenMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not enabled..
        /// </summary>
        internal static string ErrorMessage_DisabledFeature {
            get {
                return ResourceManager.GetString("ErrorMessage_DisabledFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate action name &apos;{0}&apos;..
        /// </summary>
        internal static string ErrorMessage_DuplicateActionName {
            get {
                return ResourceManager.GetString("ErrorMessage_DuplicateActionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure blob egress failed: {0}.
        /// </summary>
        internal static string ErrorMessage_EgressAzureFailedDetailed {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressAzureFailedDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure blob egress failed..
        /// </summary>
        internal static string ErrorMessage_EgressAzureFailedGeneric {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressAzureFailedGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system egress failed: {0}.
        /// </summary>
        internal static string ErrorMessage_EgressFileFailedDetailed {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressFileFailedDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system egress failed..
        /// </summary>
        internal static string ErrorMessage_EgressFileFailedGeneric {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressFileFailedGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SharedAccessSignature, AccountKey, or ManagedIdentityClientId must be specified..
        /// </summary>
        internal static string ErrorMessage_EgressMissingCredentials {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressMissingCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Egress provider &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string ErrorMessage_EgressProviderDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressProviderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Egress provider type &apos;{0}&apos; was not registered..
        /// </summary>
        internal static string ErrorMessage_EgressProviderTypeNotRegistered {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressProviderTypeNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create unique intermediate file in &apos;{0}&apos; directory..
        /// </summary>
        internal static string ErrorMessage_EgressUnableToCreateIntermediateFile {
            get {
                return ResourceManager.GetString("ErrorMessage_EgressUnableToCreateIntermediateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected to find shared libraries at &apos;{0}&apos;..
        /// </summary>
        internal static string ErrorMessage_ExpectedToFindSharedLibrariesAtPath {
            get {
                return ResourceManager.GetString("ErrorMessage_ExpectedToFindSharedLibrariesAtPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} must be less than the value of field {1}..
        /// </summary>
        internal static string ErrorMessage_FieldMustBeLessThanOtherField {
            get {
                return ResourceManager.GetString("ErrorMessage_FieldMustBeLessThanOtherField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} field value &apos;{1}&apos; is not allowed..
        /// </summary>
        internal static string ErrorMessage_FieldNotAllowed {
            get {
                return ResourceManager.GetString("ErrorMessage_FieldNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} field could not be decoded as hex string..
        /// </summary>
        internal static string ErrorMessage_FieldNotHex {
            get {
                return ResourceManager.GetString("ErrorMessage_FieldNotHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} field value length must be an even number..
        /// </summary>
        internal static string ErrorMessage_FieldOddLength {
            get {
                return ResourceManager.GetString("ErrorMessage_FieldOddLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file could not be found at the provided path: {0}.
        /// </summary>
        internal static string ErrorMessage_FileNotFound {
            get {
                return ResourceManager.GetString("ErrorMessage_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The guid {0} is required to be set and can not be empty..
        /// </summary>
        internal static string ErrorMessage_GuidRequired {
            get {
                return ResourceManager.GetString("ErrorMessage_GuidRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid API key..
        /// </summary>
        internal static string ErrorMessage_InvalidApiKey {
            get {
                return ResourceManager.GetString("ErrorMessage_InvalidApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid API key format..
        /// </summary>
        internal static string ErrorMessage_InvalidApiKeyFormat {
            get {
                return ResourceManager.GetString("ErrorMessage_InvalidApiKeyFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid authentication header..
        /// </summary>
        internal static string ErrorMessage_InvalidAuthHeader {
            get {
                return ResourceManager.GetString("ErrorMessage_InvalidAuthHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration parameter {0} must be contain a valid jwk, the value &apos;{1}&apos; could not be parsed as a Json Web Key. The expected format is a Json Web Key written as JSON which is base64Url encoded. {2}.
        /// </summary>
        internal static string ErrorMessage_InvalidJwk {
            get {
                return ResourceManager.GetString("ErrorMessage_InvalidJwk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be between 1 and 254, or -1 (to obtain the maximum number allowed by system resources)..
        /// </summary>
        internal static string ErrorMessage_MaxConnections {
            get {
                return ResourceManager.GetString("ErrorMessage_MaxConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} field specified the provider &apos;{1}&apos; but it was not found in the {2} field..
        /// </summary>
        internal static string ErrorMessage_MissingStoppingEventProvider {
            get {
                return ResourceManager.GetString("ErrorMessage_MissingStoppingEventProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment block does not contain the &apos;{0}&apos; variable..
        /// </summary>
        internal static string ErrorMessage_NoEnvironmentVariable {
            get {
                return ResourceManager.GetString("ErrorMessage_NoEnvironmentVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process exited with exit code {0}.
        /// </summary>
        internal static string ErrorMessage_NonzeroExitCode {
            get {
                return ResourceManager.GetString("ErrorMessage_NonzeroExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration parameter {0} must be base64Url encoded, the value &apos;{1}&apos; could not be parsed as a base64Url-encoded string..
        /// </summary>
        internal static string ErrorMessage_NotBase64 {
            get {
                return ResourceManager.GetString("ErrorMessage_NotBase64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation does not support being stopped..
        /// </summary>
        internal static string ErrorMessage_OperationIsNotStoppable {
            get {
                return ResourceManager.GetString("ErrorMessage_OperationIsNotStoppable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} parameter value &apos;{1}&apos; is not allowed..
        /// </summary>
        internal static string ErrorMessage_ParameterNotAllowed {
            get {
                return ResourceManager.GetString("ErrorMessage_ParameterNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} parameter value &apos;{1}&apos; is not allowed. Must be between {2} and {3} bytes long..
        /// </summary>
        internal static string ErrorMessage_ParameterNotAllowedByteRange {
            get {
                return ResourceManager.GetString("ErrorMessage_ParameterNotAllowedByteRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration parameter {0} must be contain a jwk that is valid for use with dotnet-monitor. The provided Json Web Key must be have a key-type of EC or RSA and must-not have private key information because this this key is only used for signature verification..
        /// </summary>
        internal static string ErrorMessage_RejectedJwk {
            get {
                return ResourceManager.GetString("ErrorMessage_RejectedJwk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following unrecoverable validation issues were found with the &apos;{0}&apos; configuration:
        ///{1}.
        /// </summary>
        internal static string ErrorMessage_StartupConfigurationValidationException {
            get {
                return ResourceManager.GetString("ErrorMessage_StartupConfigurationValidationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a template with the name: {0}.
        /// </summary>
        internal static string ErrorMessage_TemplateNotFound {
            get {
                return ResourceManager.GetString("ErrorMessage_TemplateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; trigger factory failed to create a trigger instance..
        /// </summary>
        internal static string ErrorMessage_TriggerFactoryFailed {
            get {
                return ResourceManager.GetString("ErrorMessage_TriggerFactoryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both the {0} field and the {1} field cannot be specified..
        /// </summary>
        internal static string ErrorMessage_TwoFieldsCannotBeSpecified {
            get {
                return ResourceManager.GetString("ErrorMessage_TwoFieldsCannotBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} field or the {1} field is required..
        /// </summary>
        internal static string ErrorMessage_TwoFieldsMissing {
            get {
                return ResourceManager.GetString("ErrorMessage_TwoFieldsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to bind any urls..
        /// </summary>
        internal static string ErrorMessage_UnableToBindUrls {
            get {
                return ResourceManager.GetString("ErrorMessage_UnableToBindUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine platform of the target process..
        /// </summary>
        internal static string ErrorMessage_UnableToDetermineTargetPlatform {
            get {
                return ResourceManager.GetString("ErrorMessage_UnableToDetermineTargetPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find profiler assembly at determined path..
        /// </summary>
        internal static string ErrorMessage_UnableToFindProfilerAssembly {
            get {
                return ResourceManager.GetString("ErrorMessage_UnableToFindProfilerAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to start: {0} {1}.
        /// </summary>
        internal static string ErrorMessage_UnableToStartProcess {
            get {
                return ResourceManager.GetString("ErrorMessage_UnableToStartProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled connection mode: {0}.
        /// </summary>
        internal static string ErrorMessage_UnhandledConnectionMode {
            get {
                return ResourceManager.GetString("ErrorMessage_UnhandledConnectionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a known action type..
        /// </summary>
        internal static string ErrorMessage_UnknownActionType {
            get {
                return ResourceManager.GetString("ErrorMessage_UnknownActionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown output format type: {0}.
        /// </summary>
        internal static string ErrorMessage_UnknownFormat {
            get {
                return ResourceManager.GetString("ErrorMessage_UnknownFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a known trigger type..
        /// </summary>
        internal static string ErrorMessage_UnknownTriggerType {
            get {
                return ResourceManager.GetString("ErrorMessage_UnknownTriggerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call Stacks.
        /// </summary>
        internal static string FeatureName_CallStacks {
            get {
                return ResourceManager.GetString("FeatureName_CallStacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exceptions.
        /// </summary>
        internal static string FeatureName_Exceptions {
            get {
                return ResourceManager.GetString("FeatureName_Exceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monitor logs and metrics in a .NET application send the results to a chosen destination..
        /// </summary>
        internal static string HelpDescription_CommandCollect {
            get {
                return ResourceManager.GetString("HelpDescription_CommandCollect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration related commands for dotnet-monitor..
        /// </summary>
        internal static string HelpDescription_CommandConfig {
            get {
                return ResourceManager.GetString("HelpDescription_CommandConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate api key and hash for authentication..
        /// </summary>
        internal static string HelpDescription_CommandGenerateKey {
            get {
                return ResourceManager.GetString("HelpDescription_CommandGenerateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows configuration, as if dotnet-monitor collect was executed with these parameters..
        /// </summary>
        internal static string HelpDescription_CommandShow {
            get {
                return ResourceManager.GetString("HelpDescription_CommandShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified path and filename of the json configuration file you&apos;d like to add to the list of configuration sources..
        /// </summary>
        internal static string HelpDescription_OptionConfigurationFilePath {
            get {
                return ResourceManager.GetString("HelpDescription_OptionConfigurationFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified path and filename of the diagnostic port to which runtime instances can connect..
        /// </summary>
        internal static string HelpDescription_OptionDiagnosticPort {
            get {
                return ResourceManager.GetString("HelpDescription_OptionDiagnosticPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration level. Unredacted configuration can show sensitive information..
        /// </summary>
        internal static string HelpDescription_OptionLevel {
            get {
                return ResourceManager.GetString("HelpDescription_OptionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable publishing of metrics.
        /// </summary>
        internal static string HelpDescription_OptionMetrics {
            get {
                return ResourceManager.GetString("HelpDescription_OptionMetrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bindings for metrics api..
        /// </summary>
        internal static string HelpDescription_OptionMetricsUrls {
            get {
                return ResourceManager.GetString("HelpDescription_OptionMetricsUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off authentication..
        /// </summary>
        internal static string HelpDescription_OptionNoAuth {
            get {
                return ResourceManager.GetString("HelpDescription_OptionNoAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off HTTP response egress.
        /// </summary>
        internal static string HelpDescription_OptionNoHttpEgress {
            get {
                return ResourceManager.GetString("HelpDescription_OptionNoHttpEgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show loaded configuration providers from high to low priority.
        /// </summary>
        internal static string HelpDescription_OptionShowSources {
            get {
                return ResourceManager.GetString("HelpDescription_OptionShowSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates a new MonitorApiKey for each launch of the process..
        /// </summary>
        internal static string HelpDescription_OptionTempApiKey {
            get {
                return ResourceManager.GetString("HelpDescription_OptionTempApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bindings for the REST api..
        /// </summary>
        internal static string HelpDescription_OptionUrls {
            get {
                return ResourceManager.GetString("HelpDescription_OptionUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output format of the API Key configuration..
        /// </summary>
        internal static string HelpDescription_OutputFormat {
            get {
                return ResourceManager.GetString("HelpDescription_OutputFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JWT Authorization header using bearer token authentication. Put the Authorization header value (&quot;Bearer&quot; prefix and the JWT value) in the textbox when prompted..
        /// </summary>
        internal static string HelpDescription_SecurityDefinitionDescription_ApiKey {
            get {
                return ResourceManager.GetString("HelpDescription_SecurityDefinitionDescription_ApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swagger UI permission.
        /// </summary>
        internal static string HelpDescription_SwaggerScope_AzureAd {
            get {
                return ResourceManager.GetString("HelpDescription_SwaggerScope_AzureAd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule action options &apos;{settingsType}&apos; must implement ICloneable to support property tokenization..
        /// </summary>
        internal static string LogFormatString_ActionSettingsTokenizationNotSupported {
            get {
                return ResourceManager.GetString("LogFormatString_ActionSettingsTokenizationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {apiAuthenticationConfigKey} settings have changed. The new settings have passed validation..
        /// </summary>
        internal static string LogFormatString_ApiKeyAuthenticationOptionsValidated {
            get {
                return ResourceManager.GetString("LogFormatString_ApiKeyAuthenticationOptionsValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API key authentication is not configured. See {0} for more details..
        /// </summary>
        internal static string LogFormatString_ApiKeyNotConfigured {
            get {
                return ResourceManager.GetString("LogFormatString_ApiKeyNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {configName} have changed, new values: Subject={subject}, PublicKey={publicKey}.
        /// </summary>
        internal static string LogFormatString_ApiKeyOptionsChanged {
            get {
                return ResourceManager.GetString("LogFormatString_ApiKeyOptionsChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {apiAuthenticationConfigKey} settings are invalid: {validationFailure}.
        /// </summary>
        internal static string LogFormatString_ApiKeyValidationFailure {
            get {
                return ResourceManager.GetString("LogFormatString_ApiKeyValidationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound default address: {address}.
        /// </summary>
        internal static string LogFormatString_BoundDefaultAddress {
            get {
                return ResourceManager.GetString("LogFormatString_BoundDefaultAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound metrics address: {address}.
        /// </summary>
        internal static string LogFormatString_BoundMetricsAddress {
            get {
                return ResourceManager.GetString("LogFormatString_BoundMetricsAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; action &apos;{actionType}&apos; completed..
        /// </summary>
        internal static string LogFormatString_CollectionRuleActionCompleted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleActionCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; action &apos;{actionType}&apos; failed..
        /// </summary>
        internal static string LogFormatString_CollectionRuleActionFailed {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleActionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; actions completed..
        /// </summary>
        internal static string LogFormatString_CollectionRuleActionsCompleted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleActionsCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; action &apos;{actionType}&apos; started..
        /// </summary>
        internal static string LogFormatString_CollectionRuleActionStarted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleActionStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; actions throttled due to action limits..
        /// </summary>
        internal static string LogFormatString_CollectionRuleActionsThrottled {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleActionsThrottled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; cancelled..
        /// </summary>
        internal static string LogFormatString_CollectionRuleCancelled {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; completed..
        /// </summary>
        internal static string LogFormatString_CollectionRuleCompleted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule configuration changed..
        /// </summary>
        internal static string LogFormatString_CollectionRuleConfigurationChanged {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleConfigurationChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; failed..
        /// </summary>
        internal static string LogFormatString_CollectionRuleFailed {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All collection rules started..
        /// </summary>
        internal static string LogFormatString_CollectionRulesStarted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRulesStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting collection rules..
        /// </summary>
        internal static string LogFormatString_CollectionRulesStarting {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRulesStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All collection rules have stopped..
        /// </summary>
        internal static string LogFormatString_CollectionRulesStopped {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRulesStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping collection rules..
        /// </summary>
        internal static string LogFormatString_CollectionRulesStopping {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRulesStopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; started..
        /// </summary>
        internal static string LogFormatString_CollectionRuleStarted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; trigger &apos;{triggerType}&apos; completed..
        /// </summary>
        internal static string LogFormatString_CollectionRuleTriggerCompleted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleTriggerCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; trigger &apos;{triggerType}&apos; started..
        /// </summary>
        internal static string LogFormatString_CollectionRuleTriggerStarted {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleTriggerStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule &apos;{ruleName}&apos; filters do not match the process..
        /// </summary>
        internal static string LogFormatString_CollectionRuleUnmatchedFilters {
            get {
                return ResourceManager.GetString("LogFormatString_CollectionRuleUnmatchedFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection mode: Connect.
        /// </summary>
        internal static string LogFormatString_ConnectionModeConnect {
            get {
                return ResourceManager.GetString("LogFormatString_ConnectionModeConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection mode: Listen at &apos;{path}&apos;.
        /// </summary>
        internal static string LogFormatString_ConnectionModeListen {
            get {
                return ResourceManager.GetString("LogFormatString_ConnectionModeListen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagnostic port file at &apos;{0}&apos; was either deleted or moved while it was still being used..
        /// </summary>
        internal static string LogFormatString_DiagnosticPortAlteredWhileInUse {
            get {
                return ResourceManager.GetString("LogFormatString_DiagnosticPortAlteredWhileInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to delete diagnostic port file at &apos;{0}&apos;..
        /// </summary>
        internal static string LogFormatString_DiagnosticPortDeleteAttempt {
            get {
                return ResourceManager.GetString("LogFormatString_DiagnosticPortDeleteAttempt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete diagnostic port file at &apos;{0}&apos;..
        /// </summary>
        internal static string LogFormatString_DiagnosticPortDeleteFailed {
            get {
                return ResourceManager.GetString("LogFormatString_DiagnosticPortDeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When using collection rules, the diagnostic port must be in &apos;Listen&apos; mode. Please correct the configuration and restart dotnet monitor..
        /// </summary>
        internal static string LogFormatString_DiagnosticPortNotInListenModeForCollectionRules {
            get {
                return ResourceManager.GetString("LogFormatString_DiagnosticPortNotInListenModeForCollectionRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to watch diagnostic port file at &apos;{0}&apos;..
        /// </summary>
        internal static string LogFormatString_DiagnosticPortWatchingFailed {
            get {
                return ResourceManager.GetString("LogFormatString_DiagnosticPortWatchingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelled waiting for diagnostic response from runtime in process {processId}..
        /// </summary>
        internal static string LogFormatString_DiagnosticRequestCancelled {
            get {
                return ResourceManager.GetString("LogFormatString_DiagnosticRequestCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get diagnostic response from runtime in process {processId}..
        /// </summary>
        internal static string LogFormatString_DiagnosticRequestFailed {
            get {
                return ResourceManager.GetString("LogFormatString_DiagnosticRequestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiate, Kerberos, and NTLM authentication are not enabled when running with elevated permissions..
        /// </summary>
        internal static string LogFormatString_DisabledNegotiateWhileElevated {
            get {
                return ResourceManager.GetString("LogFormatString_DisabledNegotiateWhileElevated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule action &apos;{actionType}&apos; was previously registered; the new registration will be ignored..
        /// </summary>
        internal static string LogFormatString_DuplicateCollectionRuleActionIgnored {
            get {
                return ResourceManager.GetString("LogFormatString_DuplicateCollectionRuleActionIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection rule trigger &apos;{triggerType}&apos; was previously registered; the new registration will be ignored..
        /// </summary>
        internal static string LogFormatString_DuplicateCollectionRuleTriggerIgnored {
            get {
                return ResourceManager.GetString("LogFormatString_DuplicateCollectionRuleTriggerIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New provider &apos;{providerName}&apos; under type &apos;{providerType}&apos; was already registered with type &apos;{existingProviderType}&apos; and will be ignored..
        /// </summary>
        internal static string LogFormatString_DuplicateEgressProviderIgnored {
            get {
                return ResourceManager.GetString("LogFormatString_DuplicateEgressProviderIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata cannot include duplicate keys; please change or remove the key &apos;{key}&apos;.
        /// </summary>
        internal static string LogFormatString_DuplicateKeyInMetadata {
            get {
                return ResourceManager.GetString("LogFormatString_DuplicateKeyInMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying action stream to egress stream with buffer size {bufferSize}.
        /// </summary>
        internal static string LogFormatString_EgressCopyActionStreamToEgressStream {
            get {
                return ResourceManager.GetString("LogFormatString_EgressCopyActionStreamToEgressStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider &apos;{providerName}&apos;: The options are invalid. The provider will not be available for use..
        /// </summary>
        internal static string LogFormatString_EgressProviderInvalidOptions {
            get {
                return ResourceManager.GetString("LogFormatString_EgressProviderInvalidOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider {providerType}: Invoking stream action..
        /// </summary>
        internal static string LogFormatString_EgressProviderInvokeStreamAction {
            get {
                return ResourceManager.GetString("LogFormatString_EgressProviderInvokeStreamAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider &apos;{providerName}&apos;: {failureMessage}.
        /// </summary>
        internal static string LogFormatString_EgressProviderOptionsValidationError {
            get {
                return ResourceManager.GetString("LogFormatString_EgressProviderOptionsValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider {providerType}: Saved stream to {path}.
        /// </summary>
        internal static string LogFormatString_EgressProviderSavedStream {
            get {
                return ResourceManager.GetString("LogFormatString_EgressProviderSavedStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider {providerType}: Unable to find &apos;{keyName}&apos; key in egress properties.
        /// </summary>
        internal static string LogFormatString_EgressProvideUnableToFindPropertyKey {
            get {
                return ResourceManager.GetString("LogFormatString_EgressProvideUnableToFindPropertyKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected timeout from process {processId}. Process will no longer be monitored..
        /// </summary>
        internal static string LogFormatString_EndpointTimeout {
            get {
                return ResourceManager.GetString("LogFormatString_EndpointTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target framework does not support custom egress metadata..
        /// </summary>
        internal static string LogFormatString_EnvironmentBlockNotSupported {
            get {
                return ResourceManager.GetString("LogFormatString_EnvironmentBlockNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment variable &apos;{name}&apos; could not be found on the target process..
        /// </summary>
        internal static string LogFormatString_EnvironmentVariableNotFound {
            get {
                return ResourceManager.GetString("LogFormatString_EnvironmentVariableNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tell us about your experience with dotnet monitor: {link}.
        /// </summary>
        internal static string LogFormatString_ExperienceSurvey {
            get {
                return ResourceManager.GetString("LogFormatString_ExperienceSurvey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental feature &apos;{name}&apos; is enabled..
        /// </summary>
        internal static string LogFormatString_ExperimentalFeatureEnabled {
            get {
                return ResourceManager.GetString("LogFormatString_ExperimentalFeatureEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize shared library storage..
        /// </summary>
        internal static string LogFormatString_FailedInitializeSharedLibraryStorage {
            get {
                return ResourceManager.GetString("LogFormatString_FailedInitializeSharedLibraryStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting the environment variable {variableName} from process {processId}..
        /// </summary>
        internal static string LogFormatString_GetEnvironmentVariable {
            get {
                return ResourceManager.GetString("LogFormatString_GetEnvironmentVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: Authentication is enabled over insecure http transport. This can pose a security risk and is not intended for production environments..
        /// </summary>
        internal static string LogFormatString_InsecureAuthenticationConfiguration {
            get {
                return ResourceManager.GetString("LogFormatString_InsecureAuthenticationConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The intermediate file at the following path could not be deleted: {path}.
        /// </summary>
        internal static string LogFormatString_IntermediateFileDeletionFailed {
            get {
                return ResourceManager.GetString("LogFormatString_IntermediateFileDeletionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid action reference &apos;{actionReference}&apos;..
        /// </summary>
        internal static string LogFormatString_InvalidActionReference {
            get {
                return ResourceManager.GetString("LogFormatString_InvalidActionReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid result reference &apos;{actionToken}&apos;..
        /// </summary>
        internal static string LogFormatString_InvalidActionResultReference {
            get {
                return ResourceManager.GetString("LogFormatString_InvalidActionResultReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid metadata; custom metadata keys must be valid C# identifiers..
        /// </summary>
        internal static string LogFormatString_InvalidMetadata {
            get {
                return ResourceManager.GetString("LogFormatString_InvalidMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action &apos;{actionName}&apos; with setting &apos;{setting}&apos; has invalid tokens..
        /// </summary>
        internal static string LogFormatString_InvalidToken {
            get {
                return ResourceManager.GetString("LogFormatString_InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading the profiler with CLSID {clsid} from {path} into process {processId}..
        /// </summary>
        internal static string LogFormatString_LoadingProfiler {
            get {
                return ResourceManager.GetString("LogFormatString_LoadingProfiler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated one-time-use ApiKey for dotnet-monitor; use the following header for authorization:{NewLine}{AuthHeaderName}: {AuthScheme} {MonitorApiKey}.
        /// </summary>
        internal static string LogFormatString_LogTempApiKey {
            get {
                return ResourceManager.GetString("LogFormatString_LogTempApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: Authentication has been disabled. This can pose a security risk and is not intended for production environments..
        /// </summary>
        internal static string LogFormatString_NoAuthentication {
            get {
                return ResourceManager.GetString("LogFormatString_NoAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration field {fieldName} contains private key information. The private key information is not required for dotnet-monitor to verify a token signature and it is strongly recommended to only provide the public key..
        /// </summary>
        internal static string LogFormatString_NotifyPrivateKey {
            get {
                return ResourceManager.GetString("LogFormatString_NotifyPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {failure}.
        /// </summary>
        internal static string LogFormatString_OptionsValidationFailure {
            get {
                return ResourceManager.GetString("LogFormatString_OptionsValidationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided url could not be parsed: {url}.
        /// </summary>
        internal static string LogFormatString_ParsingUrlFailed {
            get {
                return ResourceManager.GetString("LogFormatString_ParsingUrlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The queue {0} does not exist; ensure that the {queueName} and {queueAccountUri} fields are set correctly..
        /// </summary>
        internal static string LogFormatString_QueueDoesNotExist {
            get {
                return ResourceManager.GetString("LogFormatString_QueueDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue message egress requires {queueName} and {queueAccountUri} to be set.
        /// </summary>
        internal static string LogFormatString_QueueOptionsPartiallySet {
            get {
                return ResourceManager.GetString("LogFormatString_QueueOptionsPartiallySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process was launched elevated and will have access to all processes on the system. Do not run elevated unless you need to monitor processes launched by another user (e.g., IIS worker processes).
        /// </summary>
        internal static string LogFormatString_RunningElevated {
            get {
                return ResourceManager.GetString("LogFormatString_RunningElevated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get the runtime instance cookie of the current process..
        /// </summary>
        internal static string LogFormatString_RuntimeInstanceCookieFailedToFilterSelf {
            get {
                return ResourceManager.GetString("LogFormatString_RuntimeInstanceCookieFailedToFilterSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the environment variable {variableName} in process {processId}..
        /// </summary>
        internal static string LogFormatString_SetEnvironmentVariable {
            get {
                return ResourceManager.GetString("LogFormatString_SetEnvironmentVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared library path: {path}.
        /// </summary>
        internal static string LogFormatString_SharedLibraryPath {
            get {
                return ResourceManager.GetString("LogFormatString_SharedLibraryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Started capturing {artifactType} artifact..
        /// </summary>
        internal static string LogFormatString_StartCollectArtifact {
            get {
                return ResourceManager.GetString("LogFormatString_StartCollectArtifact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DOTNET_STARTUP_HOOKS environment variable is missing from target process {processId}..
        /// </summary>
        internal static string LogFormatString_StartupHookEnvironmentMissing {
            get {
                return ResourceManager.GetString("LogFormatString_StartupHookEnvironmentMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception-based features require that the DOTNET_STARTUP_HOOKS environment variable is set on the target process and must contain the path to the .NET Monitor startup hook library. The path to the library is &quot;{path}&quot;..
        /// </summary>
        internal static string LogFormatString_StartupHookInstructions {
            get {
                return ResourceManager.GetString("LogFormatString_StartupHookInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DOTNET_STARTUP_HOOKS environment variable for target process {processId} does not contain the &apos;{name}&apos; startup hook..
        /// </summary>
        internal static string LogFormatString_StartupHookMissing {
            get {
                return ResourceManager.GetString("LogFormatString_StartupHookMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply profiler..
        /// </summary>
        internal static string LogFormatString_UnableToApplyProfiler {
            get {
                return ResourceManager.GetString("LogFormatString_UnableToApplyProfiler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to listen to {url}. Dotnet-monitor functionality will be limited..
        /// </summary>
        internal static string LogFormatString_UnableToListenToAddress {
            get {
                return ResourceManager.GetString("LogFormatString_UnableToListenToAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to send message to the queue {0}..
        /// </summary>
        internal static string LogFormatString_WritingMessageToQueueFailed {
            get {
                return ResourceManager.GetString("LogFormatString_WritingMessageToQueueFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided configuration file &apos;{0}&apos; could not be found..
        /// </summary>
        internal static string Message_ConfigurationFileDoesNotExist {
            get {
                return ResourceManager.GetString("Message_ConfigurationFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided configuration file &apos;{0}&apos; must have the .json extension..
        /// </summary>
        internal static string Message_ConfigurationFileNotJson {
            get {
                return ResourceManager.GetString("Message_ConfigurationFileNotJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tell us about your experience with dotnet monitor: {0}.
        /// </summary>
        internal static string Message_ExperienceSurvey {
            get {
                return ResourceManager.GetString("Message_ExperienceSurvey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated ApiKey for dotnet-monitor; use the following header for authorization:.
        /// </summary>
        internal static string Message_GenerateApiKey {
            get {
                return ResourceManager.GetString("Message_GenerateApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1} {2}.
        /// </summary>
        internal static string Message_GeneratedAuthorizationHeader {
            get {
                return ResourceManager.GetString("Message_GeneratedAuthorizationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Key: {0}.
        /// </summary>
        internal static string Message_GeneratekeyPublicKey {
            get {
                return ResourceManager.GetString("Message_GeneratekeyPublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject: {0}.
        /// </summary>
        internal static string Message_GeneratekeySubject {
            get {
                return ResourceManager.GetString("Message_GeneratekeySubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings in {0} format:.
        /// </summary>
        internal static string Message_SettingsDump {
            get {
                return ResourceManager.GetString("Message_SettingsDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Providers (High to Low Priority):.
        /// </summary>
        internal static string Message_ShowSources {
            get {
                return ResourceManager.GetString("Message_ShowSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First chance exception. {0}: {1}.
        /// </summary>
        internal static string OutputFormatString_FirstChanceException {
            get {
                return ResourceManager.GetString("OutputFormatString_FirstChanceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   at {0}.{1}.
        /// </summary>
        internal static string OutputFormatString_FirstChanceExceptionStackFrame {
            get {
                return ResourceManager.GetString("OutputFormatString_FirstChanceExceptionStackFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :NOT PRESENT:.
        /// </summary>
        internal static string Placeholder_NotPresent {
            get {
                return ResourceManager.GetString("Placeholder_NotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :REDACTED:.
        /// </summary>
        internal static string Placeholder_Redacted {
            get {
                return ResourceManager.GetString("Placeholder_Redacted", resourceCulture);
            }
        }
    }
}
