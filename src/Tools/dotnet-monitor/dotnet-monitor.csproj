<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <RuntimeIdentifiers>linux-x64;linux-musl-x64;win-x64</RuntimeIdentifiers>
    <PackAsToolShimRuntimeIdentifiers>linux-x64;linux-musl-x64;win-x64</PackAsToolShimRuntimeIdentifiers>
    <RootNamespace>Microsoft.Diagnostics.Tools.Monitor</RootNamespace>
    <ToolCommandName>dotnet-monitor</ToolCommandName>
    <Description>.NET Core Diagnostic Monitoring Tool</Description>
    <PackageTags>Diagnostic</PackageTags>
    <PackageReleaseNotes>$(Description)</PackageReleaseNotes>
    <RollForward>Major</RollForward>
    <!-- This forces the creation of a checksum file and uploads it to blob storage
         using this name as part of the blob relative path. -->
    <BlobGroupPrefix>monitor</BlobGroupPrefix>
    <!-- File locking warnings (that are typically resolved with automatic retries) are failing builds
         quite frequently with messages such as:
         
         error MSB3026: (NETCORE_ENGINEERING_TELEMETRY=Build) Could not copy "...\dotnet-monitor.dll" to
         "...\dotnet-monitor.dll". Beginning retry 1 in 1000ms. The process cannot access the file
         '...\dotnet-monitor.dll' because it is being used by another process.
         
         work around this problem by telling the compiler to not warn about the issue. A file lock that
         actually prevents the build from completing correctly should still fail the compilation with
         an MSB3027 error. -->
    <NoWarn>$(NoWarn);MSB3026</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="appsettings.Development.json" />
    <None Remove="appsettings.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Azure.Storage.Blobs" Version="$(AzureStorageBlobsVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="$(MicrosoftAspNetCoreAuthenticationJwtBearerVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Negotiate" Version="$(MicrosoftAspNetCoreAuthenticationNegotiateVersion)" />
    <PackageReference Include="System.CommandLine" Version="$(SystemCommandLineVersion)" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="$(SystemIdentityModelTokensJwtVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(DIAGNOSTICS_REPO_ROOT)' == ''">
    <PackageReference Include="Microsoft.Diagnostics.Monitoring" Version="$(MicrosoftDiagnosticsMonitoringVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(DIAGNOSTICS_REPO_ROOT)' != ''">
    <ProjectReference Include="$(DIAGNOSTICS_REPO_ROOT)\src\Microsoft.Diagnostics.Monitoring\Microsoft.Diagnostics.Monitoring.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\Common\CommandExtensions.cs" Link="CommandExtensions.cs" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="appsettings.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Microsoft.Diagnostics.Monitoring.Options\Microsoft.Diagnostics.Monitoring.Options.csproj" />
    <ProjectReference Include="..\..\Microsoft.Diagnostics.Monitoring.WebApi\Microsoft.Diagnostics.Monitoring.WebApi.csproj" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.Diagnostics.Monitoring.ConfigurationSchema" />
    <InternalsVisibleTo Include="Microsoft.Diagnostics.Monitoring.OpenApiGen" />
    <InternalsVisibleTo Include="Microsoft.Diagnostics.Monitoring.Tool.UnitTests" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
    <EmbeddedResource Update="Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
