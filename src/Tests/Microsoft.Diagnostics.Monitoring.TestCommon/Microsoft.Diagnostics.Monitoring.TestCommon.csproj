<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.1;net5.0</TargetFrameworks>
  </PropertyGroup>

  <!-- 
    DARCVersionFileName, GenerateDARCVersionCs, and InjectDARCVersion are used for injecting the value of the Microsoft.NETCore.App version
    into csharp code so that it can be used by testing harnesses for running tests under a specific runtime version.  This specifically
    allows tests to run on a version of the runtime besides whatever was included with Arcade's SDK.
   -->

  <PropertyGroup>
    <DARCVersionFileName>$(IntermediateOutputPath)/$(TargetFramework)/DARCVersion.g.cs</DARCVersionFileName>
    <DARCRuntimeVersion Condition="'$(TargetFramework)' == 'netcoreapp3.1'">$(MicrosoftNETCoreApp31Version)</DARCRuntimeVersion>
    <DARCRuntimeVersion Condition="'$(TargetFramework)' == 'net5.0'">$(MicrosoftNETCoreApp50Version)</DARCRuntimeVersion>
  </PropertyGroup>

  <Target Name="GenerateDARCVersionCs" Inputs="$(VersionsPropsPath)" Outputs="$(DARCVersionFileName)">
    <PropertyGroup>
      <DARCVersionFile>
        <![CDATA[
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.


// THIS FILE IS AUTO-GENERATED DURING BUILD.  MODIFICATIONS _WILL_ BE OVERWRITTEN!

namespace Microsoft.Diagnostics.Monitoring.TestCommon
{
    public partial class DotNetHost
    {
        public static readonly string CurrentRuntimeVersion = "$(DARCRuntimeVersion)";
    }
}
]]>
      </DARCVersionFile>
    </PropertyGroup>

    <WriteLinesToFile File="$(DARCVersionFileName)" Overwrite="true" Lines="$(DARCVersionFile.Replace(';', '%3B'))" WriteOnlyWhenDifferent="true" />
  </Target>

  <Target Name="InjectDARCVersion" BeforeTargets="BeforeCompile" DependsOnTargets="GenerateDARCVersionCs">
    <ItemGroup>
      <FileWrites Include="$(DARCVersionFileName)" />
      <Compile Include="$(DARCVersionFileName)" />
    </ItemGroup>
  </Target>

</Project>
