<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_BucketName" xml:space="preserve">
    <value>The name of the bucket used for storage</value>
    <comment>The description provided for the BucketName parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_Endpoint" xml:space="preserve">
    <value>The endpoint of S3 to connect to. This is optional in case of using AWS storage.</value>
    <comment>The description provided for the Endpoint parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_AWSProfileName" xml:space="preserve">
    <value>The AWS profile name to be used for login</value>
    <comment>The description provided for the AWSProfileName parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_AWSProfilePath" xml:space="preserve">
    <value>The AWS profile path, if profile details not stored in default path</value>
    <comment>The description provided for the AWSProfilePath parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_RegionName" xml:space="preserve">
    <value>The name of the S3 region</value>
    <comment>The description provided for the RegionName parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_AccessKeyId" xml:space="preserve">
    <value>The AWS AccessKeyId for IAM user to login</value>
    <comment>The description provided for the AccessKeyId parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_SecretAccessKey" xml:space="preserve">
    <value>The AWS SecretAccessKey associated AccessKeyId for IAM user to login</value>
    <comment>The description provided for the SecretAccessKey parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_GeneratePreSignedUrl" xml:space="preserve">
    <value>A boolean flag indicates if the return value of egress provider should be a pre-signed URL or only the bucket name and object id of uploaded entry.</value>
    <comment>The description provided for the GeneratePresSignedUrl parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_PreSignedUrlExpiry" xml:space="preserve">
    <value>The amount of time the generated pre-signed url will be accessible.</value>
    <comment>The description provided for the PreSignedUrlExpiry parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_ForcePathStyle" xml:space="preserve">
    <value>The boolean flag set for AWS connection configuration ForcePathStyle option.</value>
    <comment>The description provided for the ForcePathStyle parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_UseKmsEncryption" xml:space="preserve">
    <value>A boolean flag which controls whether the Egress should use KMS server side encryption.</value>
    <comment>The description provided for the UseKmsEncryption parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_S3StorageEgressProviderOptions_KmsEncryptionKey" xml:space="preserve">
    <value>If UseKmsEncryption is true, this specifies the arn of the "customer managed" KMS encryption key to be used for server side encryption. If no value is set for this field then S3 will use an AWS managed key for KMS encryption.</value>
    <comment>The description provided for the KmsEncryptionKey parameter on S3StorageEgressProviderOptions.</comment>
  </data>
  <data name="DisplayAttributeDescription_CommonEgressProviderOptions_CopyBufferSize" xml:space="preserve">
    <value>Buffer size used when copying data from an egress callback returning a stream to the egress callback that is provided a stream to which data is written.</value>
    <comment>The description provided for the CopyBufferSize parameter on all egress provider options.</comment>
  </data>
</root>