<Project>

  <ItemGroup>
    <AspNetCoreInstallation Include="31x64" Version="$(MicrosoftAspNetCoreApp31Version)" Architecture="x64" />
    <AspNetCoreInstallation Include="31x86" Version="$(MicrosoftAspNetCoreApp31Version)" Architecture="x86" />
    <AspNetCoreInstallation Include="50x64" Version="$(MicrosoftAspNetCoreApp50Version)" Architecture="x64" />
    <AspNetCoreInstallation Include="50x86" Version="$(MicrosoftAspNetCoreApp50Version)" Architecture="x86" />
  </ItemGroup>

  <!--
      Arcade installs the runtimes specified in $(RepoRoot)\global.json but does
      not have the ability to install ASP.NET Core runtimes. Add a target that
      executes after Arcade's target so that the ASP.NET Core runtimes can be installed.
  -->
  <Target Name="InstallAspNetCore"
    AfterTargets="InstallDotNetCore"
    DependsOnTargets="InstallAspNetCoreWindows;InstallAspNetCoreUnix" />

  <Target Name="InstallAspNetCoreWindows"
    Condition="$([MSBuild]::IsOsPlatform(Windows))">
    <PropertyGroup>
      <PowershellWrapper>powershell -NonInteractive -ExecutionPolicy ByPass -NoProfile -command</PowershellWrapper>
      <DotnetInstallScriptCmd>'$(RepositoryEngineeringDir)common\dotnet-install.ps1'</DotnetInstallScriptCmd>
    </PropertyGroup>
    <Exec Command="$(PowershellWrapper) &quot;&amp; { &amp;$(DotnetInstallScriptCmd) -Architecture %(AspNetCoreInstallation.Architecture) -Version %(AspNetCoreInstallation.Version) -Runtime aspnetcore }&quot;" />
  </Target>

  <Target Name="InstallAspNetCoreUnix"
    Condition="!$([MSBuild]::IsOsPlatform(Windows))">
    <PropertyGroup>
      <DotnetInstallScriptCmd>$(RepositoryEngineeringDir)common\dotnet-install.sh</DotnetInstallScriptCmd>
    </PropertyGroup>
    <Exec Command="$(DotnetInstallScriptCmd) -Architecture %(AspNetCoreInstallation.Architecture) -Version %(AspNetCoreInstallation.Version) -Runtime aspnetcore"
          Condition="'%(AspNetCoreInstallation.Architecture)' == 'x64'" />
  </Target>

</Project>