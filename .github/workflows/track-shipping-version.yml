name: Track shipped versions
on:
  release:
    types: [released]

permissions: {}

jobs:
  update-shipping-branch:
    if: github.repository == 'dotnet/dotnet-monitor'
    name: '[${{ github.ref_name }}] Update shipping branch'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Calculate branch name
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
        id: calculate-branch-name
        with:
          result-encoding: string
          script: |
            const regex = /v(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)/;
            const releaseVersion = regex.exec(context.payload.release.tag_name);
            if (releaseVersion == null) throw "Error: Unexpected tag format";

            return `shipped/v${releaseVersion.groups.major}.${releaseVersion.groups.minor}`;

      - name: Create or update shipped branch
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
        with:
          script: |
            const branchName = `${{ steps.calculate-branch-name.outputs.result }}`;
            const refName = `heads/${branchName}`;

            // Check if the ref already exists, if so we will need to fast forward it.
            let needToCreateRef = true;
            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: refName
              });
              needToCreateRef = false;
            } catch {
            }

            if (needToCreateRef) {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
                ref: `refs/${refName}`
              });
            } else {
              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
                ref: refName,
                force: true
              });
            }

            //
            // Trigger branch mirror, empty commits and new refs will **not** trigger mirroring.
            // The simplest way of doing this is to create an empty file on the desired branch.
            //
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branchName,
              message: 'Trigger branch mirroring',
              path: '.mirror',
              content: ''
            });