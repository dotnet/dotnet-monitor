name: Track shipped versions
on:
  release:
    types: [released]

permissions: {}

env:
  shipping_branch_prefix: 'shipped'

jobs:
  update-shipping-branch:
    if: github.repository == 'dotnet/dotnet-monitor'
    name: '[${{ github.ref_name }}] Update shipping branch'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          persist-credentials: true # We need to persist credentials to push the resulting changes upstream.

      - name: Update shipping branch
        run: |
          release_version=${GITHUB_REF_NAME%-*}
          if [[ ! "$release_version" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Unexpected release tag: $release_version."
              exit 1
          fi

          major_minor_version=${release_version%.*}
          shipping_branch_name="${shipping_branch_prefix}/${major_minor_version}"

          # This is a shallow clone so we will always create a new local branch even if it already exists on the remote
          git checkout -b "$shipping_branch_name"
          git push --force --set-upstream origin "HEAD:$shipping_branch_name"
