name: 'Check Learning Path Links'
on:
  schedule: # Run once a month
    - cron: '0 0 1 * *'
  workflow_dispatch:

permissions: {}
  
jobs:
  check-learning-path-links:
    name: 'Check Learning Path Links'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout head
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: main
          path: head

      - name: Get current SHA
        id: get_new_sha
        working-directory: ./head
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "new_sha=$new_sha" >> $GITHUB_ENV

      - name: Get previous update SHA
        id: get_sha
        working-directory: ./head
        run: |
          cd .github
          prev_sha=$(cat learning-path-sha.txt)
          echo "prev_sha=$prev_sha" >> $GITHUB_ENV
          cd ../

      - name: Checkout previous update
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref:  ${{ env.prev_sha }}
          path: prev

      - name: Get changed files
        working-directory: ./head
        run: |
          changed_source_files=$(git diff-tree --no-commit-id --name-only -r "$prev_sha" "$GITHUB_SHA" | { grep "**.cs$" || test $? = 1; })
          echo "Files to validate: '${changed_source_files}'"
          echo "updated_files=$(echo ${changed_source_files})" >> $GITHUB_ENV

      - name: Check Learning Path Links
        id: check-links
        uses: kkeirstead/LearningPathFileChecks@main
        with:
          repoURLToSearch: 'https://github.com/dotnet/dotnet-monitor'
          learningPathsDirectory: 'documentation/learningPath'
          changedFilePaths: ${{ env.updated_files }}
          sourceDirectoryName: 'src'
          oldHash: ${{ env.prev_sha }}
          newHash: ${{ env.new_sha }}

      - name: Checkout head
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: main

      - name: Update Learning Path Hashes
        id: update-hashes
        uses: kkeirstead/UpdateLearningPathCommitHashes@main
        with:
          learningPathsDirectory: 'documentation/learningPath'
          learningPathHashFile: '.github/learning-path-sha.txt'
          suggestions: $SUGGESTIONS
          oldHash: ${{ env.prev_sha }}
          newHash: ${{ env.new_sha }}
        env:
          SUGGESTIONS: ${{ steps.check-links.outputs.suggestions }}

      - name: Create PR Body
        run: |
          manuallyReview=$MANUALLY_REVIEW
          manuallyReview=${manuallyReview//,/<br />}
          manuallyReviewSection="<h2>Manually Review:</h2>${manuallyReview}<br />"
          if [ -z "$manuallyReview" ]; then
            manuallyReviewSection=""
          fi
          outOfSync=$OUT_OF_SYNC
          outOfSync=${outOfSync//,/<br />}
          outOfSyncSection="<h2>Links With Out Of Sync Commit Hashes:</h2>${outOfSync}<br />"
          if [ -z "$outOfSync" ]; then
            outOfSyncSection=""
          fi
          suggestions=$SUGGESTIONS
          suggestions=${suggestions//,/<br />}
          suggestionsSection="<h2>Auto-Applied Suggestions:</h2>${suggestions}<br />"
          if [ -z "$suggestions" ]; then
            suggestionsSection=""
          fi
          modifiedFiles=$MODIFIED_FILES
          modifiedFiles=${modifiedFiles//,/<br />}
          modifiedFilesSection="<h2>Modified Files:</h2>${modifiedFiles}<br />"
          if [ -z "$modifiedFiles" ]; then
            modifiedFilesSection=""
          fi
          body="${modifiedFilesSection}${manuallyReviewSection}${outOfSyncSection}${suggestionsSection}"
          echo "body=$body" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MODIFIED_FILES: ${{ steps.check-links.outputs.modifiedFiles }}
          MANUALLY_REVIEW: ${{ steps.check-links.outputs.manuallyReview }}
          SUGGESTIONS: ${{ steps.check-links.outputs.suggestions }}
          OUT_OF_SYNC: ${{ steps.check-links.outputs.outOfSync }}

      - name: Open PR
        uses: ./.github/actions/open-pr
        with:
          files_to_commit: ${{ steps.update-hashes.outputs.modifiedFiles }}
          title: "[REQUIRES MANUAL REVIEW] Update Learning Paths"
          commit_message: Update Learning Paths
          body: This PR was auto generated and will not be automatically merged in - adjustments should be made manually as-needed.<br />${{ env.body }}
          branch_name: learningPathUpdates/${{ env.new_sha }}
          fail_if_files_unchanged: true
          auth_token: ${{ secrets.GITHUB_TOKEN }}
