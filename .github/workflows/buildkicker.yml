name: Push a PR through check gates
on:
  issue_comment:
    types: [created]

permissions:
  checks: write
  issues: write
  pull-requests: write
  statuses: write

jobs:
  KickBuild:
    if: github.event.issue.pull_request != '' && contains(github.event.comment.body, '/kickbuild')
    runs-on: ubuntu-20.04
    steps:
    - name: Extract retries allowed
      uses: actions/github-script@v6.3.0
      id: retries-extractor
      with:
        result-encoding: string
        debug: true
        script: |
          if (context.eventName !== "issue_comment") throw "Error: This action only works on issue_comment events.";

          // extract the optional retry count attached to the end of the command
          // The expected format for the command is one of 2 examples:
          // 1. `/kickbuild`
          // 2. `/kickbuild 32` Where "32" is a string of digits representing the number of retries allowed for each check-run. (note this is limited to 2 digits, so no more than 99 retries)
          const regex = /\/kickbuild( ([\d]{1,2}))?/;
          retries = regex.exec(context.payload.comment.body);
          if (retries == null) throw "Error: Command does not match expected format: `/kickbuild XX`.";

          if (retries[2] != null) {
              return Number.parseInt(retries[2]);
          }

          return 3;
    - name: Post acknowledgement to pull request
      uses: actions/github-script@v6.3.0
      id: comment-poster
      with:
        result-encoding: string
        debug: true
        script: |
          const retries = ${{ steps.retries-extractor.outputs.result }};
          const ack_bodytext = `### Build Kicker\n\nStarted kicking build, **Build Kicker** may re-request each check-run at most ${retries} time(s).<details>\n<summary>Details</summary>\n\n**Build Kicker** is a github action defined at \`.github/workflows/buildkicker.yml\` used to automatically retry failed check-runs.\n\nThis instance was invoked by \`@${context.payload.comment.user.login}\` by adding a comment with the text \`/kickbuild\`. \n\n> Retrying tests until they suceed isn't a great engineering practice; so, use this command with caution.\n\n[GitHub Action Details](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID})</details>\n`;
          let comment = await github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: ack_bodytext
          });
          return comment.data.id
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Run BuildKicker
      uses: ./eng/actions/buildkicker
      with:
        requiredSuccesses: 2
        pollInterval: 5
        commentId: ${{ steps.comment-poster.outputs.result }}
        retries: ${{ steps.retries-extractor.outputs.result }}
        auth_token: ${{ secrets.GITHUB_TOKEN }}
