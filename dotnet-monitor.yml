trigger: none

pr:
  autoCancel: true
  branches:
    include:
    - main
    - release/*
    - internal/release/*
    - feature/*
  paths:
    exclude:
    - .devcontainer
    - .github
    - .vscode
    - .gitignore
    - eng/actions
    - '**.md'

parameters:
- name: testGroup
  displayName: 'Test Group'
  type: string
  default: Default
  values:
  - Default
  - All
  - None
  - CI
  - PR

variables:
- name: _TeamName
  value: DotNetCore
- name: _TPNFile
  value: THIRD-PARTY-NOTICES.TXT
  
- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  # DotNet-Diagnostics-SDL-Params provides Tsa* variables for SDL checks.
  - group: DotNet-Diagnostics-SDL-Params

stages:
- stage: Build
  displayName: Build and Test
  jobs:
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    # Generate a TPN for only the dotnet-monitor project
    - template: /eng/pipelines/jobs/tpn.yml

  # Build and test binaries
  - template: /eng/pipelines/jobs/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/jobs/build-test.yml
      includeArm64: ${{ ne(variables['System.TeamProject'], 'public') }}
      includeDebug: true
      jobParameters:
        testGroup: ${{ parameters.testGroup }}

  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    # Build RID (runtime identifier) archives
    - template: /eng/pipelines/jobs/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/jobs/build-archive.yml
        includeArm64: ${{ ne(variables['System.TeamProject'], 'public') }}

    # Pack, sign, and publish manifest
    - template: /eng/pipelines/jobs/pack-sign-publish.yml

    # Register with BAR
    - template: /eng/common/templates/job/publish-build-assets.yml
      parameters:
        configuration: Release
        dependsOn:
        - Pack_Sign
        publishUsingPipelines: true
        pool:
          name: NetCore1ESPool-Svc-Internal
          demands: ImageOverride -equals 1es-windows-2019
# These are the stages that perform validation of several SDL requirements and publish the bits required to the designated feed.
- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: /eng/common/templates/post-build/post-build.yml
    parameters:
      # This is to enable SDL runs part of Post-Build Validation Stage.
      # as well as NuGet, SourceLink, and signing validation.
      # The variables get imported from group dotnet-diagnostics-sdl-params
      publishingInfraVersion: 3
      # Only enable SourceLink validation for branches that are mirrored.
      # Otherwise, the validation job will timeout the build waiting for source version to exist
      # in GitHub, which will not occur for branches that only exist in the internal project.
      ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')) }}:
        enableSourceLinkValidation: true
      ${{ else }}:
        enableSourceLinkValidation: false
      enableSigningValidation: true
      enableSymbolValidation: false
      enableNugetValidation: true
      publishInstallersAndChecksums: true
      SDLValidationParameters:
        enable: true
        continueOnError: true
        params: >-
          -SourceToolsList @("policheck","credscan")
          -TsaInstanceURL $(_TsaInstanceURL)
          -TsaProjectName $(_TsaProjectName)
          -TsaNotificationEmail $(_TsaNotificationEmail)
          -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
          -TsaBugAreaPath $(_TsaBugAreaPath)
          -TsaIterationPath $(_TsaIterationPath)
          -TsaRepositoryName "dotnet-monitor"
          -TsaCodebaseName "dotnet-monitor"
          -TsaPublish $True
        artifactNames:
        - 'PackageArtifacts'
# This sets up the bits to do a Release.
- template: /eng/pipelines/stages/preparerelease.yml
